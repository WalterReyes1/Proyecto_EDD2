/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_edd2;

import static java.awt.Frame.MAXIMIZED_BOTH;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    static Main f = new Main();

    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_Campos = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        GuardarCampos = new javax.swing.JButton();
        B_CrearCampo = new javax.swing.JButton();
        B_ListarCampo = new javax.swing.JButton();
        B_ModificarCampo = new javax.swing.JButton();
        B_BorrarCampo = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jDialog_CrearCampos = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel_CrearCampo = new javax.swing.JLabel();
        jLabel_CrearCampo1 = new javax.swing.JLabel();
        Nombre_Campo = new javax.swing.JTextField();
        jLabel_CrearCampo2 = new javax.swing.JLabel();
        cb_TD = new javax.swing.JComboBox<>();
        jLabel_CrearCampo3 = new javax.swing.JLabel();
        jLabel_CrearCampo4 = new javax.swing.JLabel();
        RB1 = new javax.swing.JRadioButton();
        RB2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        longS = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog_EditarCampos = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel_CrearCampo5 = new javax.swing.JLabel();
        jLabel_CrearCampo6 = new javax.swing.JLabel();
        Nombre_Campo1 = new javax.swing.JTextField();
        jLabel_CrearCampo7 = new javax.swing.JLabel();
        cb_TD1 = new javax.swing.JComboBox<>();
        jLabel_CrearCampo8 = new javax.swing.JLabel();
        jLabel_CrearCampo9 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        No1 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jLabel_CrearCampo10 = new javax.swing.JLabel();
        Cb_editarCampo = new javax.swing.JComboBox<>();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jDialog_BorrarCampo = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        cb_borrarc = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        B_Eliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jDialog_Archivo = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        B_NuevoArchivo = new javax.swing.JButton();
        B_AbrirArchivo = new javax.swing.JButton();
        B_GuardarArchivo = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jDialog_CrearRegistro = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        B_NuevoRegistro1 = new javax.swing.JButton();
        B_AbrirRegistro = new javax.swing.JButton();
        B_CerrarRegistro = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jFrame1 = new javax.swing.JFrame();
        jPanel7 = new javax.swing.JPanel();
        Titulo2 = new javax.swing.JLabel();
        Titulo3 = new javax.swing.JLabel();
        B_Campo1 = new javax.swing.JButton();
        B_Registro1 = new javax.swing.JButton();
        B_Index1 = new javax.swing.JButton();
        B_Exportar1 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        background1 = new javax.swing.JLabel();
        jDialog_Indexar = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        B_Crear_Indice = new javax.swing.JButton();
        B_Reindexar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Indexar = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        Cb_Indexar = new javax.swing.JComboBox<>();
        jButton16 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Titulo = new javax.swing.JLabel();
        Titulo1 = new javax.swing.JLabel();
        B_Campo = new javax.swing.JButton();
        B_Registro = new javax.swing.JButton();
        B_Index = new javax.swing.JButton();
        B_Exportar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(255, 153, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Tipo", "Tama√±o", "Es Llave"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 46, 452, 260));

        GuardarCampos.setText("Guardar Campos");
        GuardarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCamposActionPerformed(evt);
            }
        });
        jPanel2.add(GuardarCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, 150, 50));

        B_CrearCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_CrearCampo.setText("Crear Campo");
        B_CrearCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CrearCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_CrearCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 46, 126, -1));

        B_ListarCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_ListarCampo.setText("Listar Campos");
        B_ListarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ListarCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_ListarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 126, -1));

        B_ModificarCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_ModificarCampo.setText("Modificar Campo");
        B_ModificarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ModificarCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_ModificarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 120, -1));

        B_BorrarCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_BorrarCampo.setText("Borrar Campo");
        B_BorrarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_BorrarCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_BorrarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 126, -1));

        jButton7.setText("jButton7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 400));

        javax.swing.GroupLayout jDialog_CamposLayout = new javax.swing.GroupLayout(jDialog_Campos.getContentPane());
        jDialog_Campos.getContentPane().setLayout(jDialog_CamposLayout);
        jDialog_CamposLayout.setHorizontalGroup(
            jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_CamposLayout.setVerticalGroup(
            jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 377, Short.MAX_VALUE)
            .addGroup(jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialog_CrearCampos.setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_CrearCampo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel_CrearCampo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo.setText("Crear Campo");
        jPanel3.add(jLabel_CrearCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel_CrearCampo1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo1.setText("Nombre del Campo");
        jPanel3.add(jLabel_CrearCampo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 73, -1, -1));

        Nombre_Campo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nombre_Campo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nombre_CampoActionPerformed(evt);
            }
        });
        jPanel3.add(Nombre_Campo, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 73, 260, -1));

        jLabel_CrearCampo2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo2.setText("Tipo de Dato");
        jPanel3.add(jLabel_CrearCampo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 110, -1, -1));

        cb_TD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Char", "Int" }));
        cb_TD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_TDItemStateChanged(evt);
            }
        });
        jPanel3.add(cb_TD, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 109, 120, -1));

        jLabel_CrearCampo3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo3.setText("Numero de caracteres m√°ximo");
        jPanel3.add(jLabel_CrearCampo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 154, -1, -1));

        jLabel_CrearCampo4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo4.setText("¬øEs llave primaria? ");
        jPanel3.add(jLabel_CrearCampo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 199, -1, -1));

        RB1.setBackground(new java.awt.Color(204, 0, 204));
        buttonGroup1.add(RB1);
        RB1.setForeground(new java.awt.Color(255, 255, 255));
        RB1.setText("S√≠");
        jPanel3.add(RB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 197, -1, -1));

        RB2.setBackground(new java.awt.Color(204, 0, 204));
        buttonGroup1.add(RB2);
        RB2.setForeground(new java.awt.Color(255, 255, 255));
        RB2.setText("No");
        jPanel3.add(RB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 197, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Crear Campo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, -1, -1));

        longS.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel3.add(longS, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 153, 54, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 370));

        javax.swing.GroupLayout jDialog_CrearCamposLayout = new javax.swing.GroupLayout(jDialog_CrearCampos.getContentPane());
        jDialog_CrearCampos.getContentPane().setLayout(jDialog_CrearCamposLayout);
        jDialog_CrearCamposLayout.setHorizontalGroup(
            jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
            .addGroup(jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_CrearCamposLayout.setVerticalGroup(
            jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 349, Short.MAX_VALUE)
            .addGroup(jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 102, 51));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_CrearCampo5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo5.setText("Editar campo");
        jPanel4.add(jLabel_CrearCampo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 33, -1, -1));

        jLabel_CrearCampo6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo6.setText("Nombre del Campo");
        jPanel4.add(jLabel_CrearCampo6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, -1, -1));

        Nombre_Campo1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nombre_Campo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nombre_Campo1ActionPerformed(evt);
            }
        });
        jPanel4.add(Nombre_Campo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 73, 120, -1));

        jLabel_CrearCampo7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo7.setText("Tipo de Dato");
        jPanel4.add(jLabel_CrearCampo7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 107, -1, -1));

        cb_TD1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Char", "Int" }));
        jPanel4.add(cb_TD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 110, 87, -1));

        jLabel_CrearCampo8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo8.setText("Numero de caracteres m√°ximo");
        jPanel4.add(jLabel_CrearCampo8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 148, -1, -1));

        jLabel_CrearCampo9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo9.setText("¬øEs llave primaria? ");
        jPanel4.add(jLabel_CrearCampo9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 189, -1, -1));

        jRadioButton2.setBackground(new java.awt.Color(51, 0, 51));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("S√≠");
        jPanel4.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 191, -1, -1));

        No1.setBackground(new java.awt.Color(51, 0, 51));
        buttonGroup1.add(No1);
        No1.setForeground(new java.awt.Color(255, 255, 255));
        No1.setText("No");
        jPanel4.add(No1, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 191, -1, -1));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Modificar Campo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 286, -1, -1));

        jLabel_CrearCampo10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo10.setText("Campo a Editar");
        jPanel4.add(jLabel_CrearCampo10, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 53, -1, -1));

        Cb_editarCampo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Cb_editarCampoItemStateChanged(evt);
            }
        });
        jPanel4.add(Cb_editarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 81, 98, -1));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel4.add(jSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 151, 54, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 1, 560, 350));

        javax.swing.GroupLayout jDialog_EditarCamposLayout = new javax.swing.GroupLayout(jDialog_EditarCampos.getContentPane());
        jDialog_EditarCampos.getContentPane().setLayout(jDialog_EditarCamposLayout);
        jDialog_EditarCamposLayout.setHorizontalGroup(
            jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 559, Short.MAX_VALUE)
            .addGroup(jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_EditarCamposLayout.setVerticalGroup(
            jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
            .addGroup(jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 102, 51));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.add(cb_borrarc, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 143, 36));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Campo a Eliminar");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        B_Eliminar.setBackground(new java.awt.Color(255, 255, 255));
        B_Eliminar.setText("Eliminar");
        B_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_EliminarActionPerformed(evt);
            }
        });
        jPanel5.add(B_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 143, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-180, 0, 660, 290));

        javax.swing.GroupLayout jDialog_BorrarCampoLayout = new javax.swing.GroupLayout(jDialog_BorrarCampo.getContentPane());
        jDialog_BorrarCampo.getContentPane().setLayout(jDialog_BorrarCampoLayout);
        jDialog_BorrarCampoLayout.setHorizontalGroup(
            jDialog_BorrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_BorrarCampoLayout.setVerticalGroup(
            jDialog_BorrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 102, 51));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_NuevoArchivo.setBackground(new java.awt.Color(255, 255, 255));
        B_NuevoArchivo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_NuevoArchivo.setText("Nuevo Archivo");
        B_NuevoArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_NuevoArchivoActionPerformed(evt);
            }
        });
        jPanel6.add(B_NuevoArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 200, 35));

        B_AbrirArchivo.setBackground(new java.awt.Color(255, 255, 255));
        B_AbrirArchivo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_AbrirArchivo.setText("Abrir archivo");
        B_AbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_AbrirArchivoActionPerformed(evt);
            }
        });
        jPanel6.add(B_AbrirArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 200, 35));

        B_GuardarArchivo.setBackground(new java.awt.Color(255, 255, 255));
        B_GuardarArchivo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_GuardarArchivo.setText("Cerrar y Guardar Archivo");
        B_GuardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_GuardarArchivoActionPerformed(evt);
            }
        });
        jPanel6.add(B_GuardarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 250, 50));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton5.setText("Archivos de Prueba #2");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 230, 40));

        jButton11.setText("Archivos de Prueba #1");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 240, 40));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel6.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-310, 0, 660, 400));

        javax.swing.GroupLayout jDialog_ArchivoLayout = new javax.swing.GroupLayout(jDialog_Archivo.getContentPane());
        jDialog_Archivo.getContentPane().setLayout(jDialog_ArchivoLayout);
        jDialog_ArchivoLayout.setHorizontalGroup(
            jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
            .addGroup(jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_ArchivoLayout.setVerticalGroup(
            jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
            .addGroup(jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jFormattedTextField1.setText("jFormattedTextField1");

        jPanel8.setBackground(new java.awt.Color(255, 102, 51));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_NuevoRegistro1.setBackground(new java.awt.Color(255, 255, 255));
        B_NuevoRegistro1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_NuevoRegistro1.setText("Nuevo Registro");
        B_NuevoRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_NuevoRegistro1ActionPerformed(evt);
            }
        });
        jPanel8.add(B_NuevoRegistro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 176, 35));

        B_AbrirRegistro.setBackground(new java.awt.Color(255, 255, 255));
        B_AbrirRegistro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_AbrirRegistro.setText("Mostrar Registro");
        B_AbrirRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_AbrirRegistroActionPerformed(evt);
            }
        });
        jPanel8.add(B_AbrirRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 176, 35));

        B_CerrarRegistro.setBackground(new java.awt.Color(255, 255, 255));
        B_CerrarRegistro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_CerrarRegistro.setText("Borrar Registro");
        B_CerrarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CerrarRegistroActionPerformed(evt);
            }
        });
        jPanel8.add(B_CerrarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 176, 35));

        jButton8.setText("Modificar Registro");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 180, 40));

        jButton9.setText("jButton9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-310, 0, 660, 400));

        javax.swing.GroupLayout jDialog_CrearRegistroLayout = new javax.swing.GroupLayout(jDialog_CrearRegistro.getContentPane());
        jDialog_CrearRegistro.getContentPane().setLayout(jDialog_CrearRegistroLayout);
        jDialog_CrearRegistroLayout.setHorizontalGroup(
            jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_CrearRegistroLayout.setVerticalGroup(
            jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(255, 102, 51));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        Titulo2.setForeground(new java.awt.Color(255, 255, 255));
        Titulo2.setText("File Manager");
        jPanel7.add(Titulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, -1));

        Titulo3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Titulo3.setForeground(new java.awt.Color(255, 255, 255));
        Titulo3.setText("Standard");
        jPanel7.add(Titulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        B_Campo1.setBackground(new java.awt.Color(255, 255, 255));
        B_Campo1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Campo1.setText("Campos");
        B_Campo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Campo1ActionPerformed(evt);
            }
        });
        jPanel7.add(B_Campo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 160, 50));

        B_Registro1.setBackground(new java.awt.Color(255, 255, 255));
        B_Registro1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Registro1.setText("Archivo");
        B_Registro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Registro1ActionPerformed(evt);
            }
        });
        jPanel7.add(B_Registro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 160, 50));

        B_Index1.setBackground(new java.awt.Color(255, 255, 255));
        B_Index1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Index1.setText("Index");
        B_Index1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Index1ActionPerformed(evt);
            }
        });
        jPanel7.add(B_Index1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 160, 50));

        B_Exportar1.setBackground(new java.awt.Color(255, 255, 255));
        B_Exportar1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Exportar1.setText("Exportar");
        B_Exportar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Exportar1ActionPerformed(evt);
            }
        });
        jPanel7.add(B_Exportar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 160, 50));

        jButton12.setBackground(new java.awt.Color(255, 255, 255));
        jButton12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton12.setText("Registro");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 160, 50));

        jButton13.setText("jButton4");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, -1, -1));

        jButton14.setText("jButton6");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, -1, -1));

        jButton15.setText("jButton10");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, -1, -1));

        background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel7.add(background1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-280, 0, 700, 530));

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
            .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jFrame1Layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jFrame1Layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel9.setBackground(new java.awt.Color(255, 102, 51));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_Crear_Indice.setBackground(new java.awt.Color(255, 255, 255));
        B_Crear_Indice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Crear_Indice.setText("Crear √çndice");
        B_Crear_Indice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_Crear_IndiceActionPerformed(evt);
            }
        });
        jPanel9.add(B_Crear_Indice, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 176, 35));

        B_Reindexar.setBackground(new java.awt.Color(255, 255, 255));
        B_Reindexar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Reindexar.setText("Reindexar");
        B_Reindexar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ReindexarActionPerformed(evt);
            }
        });
        jPanel9.add(B_Reindexar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 176, 35));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel9.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(-310, 0, 660, 400));

        javax.swing.GroupLayout jDialog_IndexarLayout = new javax.swing.GroupLayout(jDialog_Indexar.getContentPane());
        jDialog_Indexar.getContentPane().setLayout(jDialog_IndexarLayout);
        jDialog_IndexarLayout.setHorizontalGroup(
            jDialog_IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(jDialog_IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_IndexarLayout.setVerticalGroup(
            jDialog_IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jDialog_IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(255, 102, 51));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Cb_Indexar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cb_IndexarActionPerformed(evt);
            }
        });
        jPanel10.add(Cb_Indexar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 110, 40));

        jButton16.setText("Verificar e Indexar");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 220, 190, 40));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel10.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(-310, 0, 660, 400));

        javax.swing.GroupLayout IndexarLayout = new javax.swing.GroupLayout(Indexar.getContentPane());
        Indexar.getContentPane().setLayout(IndexarLayout);
        IndexarLayout.setHorizontalGroup(
            IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        IndexarLayout.setVerticalGroup(
            IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(IndexarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(300, 700));

        jPanel1.setBackground(new java.awt.Color(255, 102, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setText("File Manager");
        jPanel1.add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, -1));

        Titulo1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Titulo1.setForeground(new java.awt.Color(255, 255, 255));
        Titulo1.setText("Standard");
        jPanel1.add(Titulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        B_Campo.setBackground(new java.awt.Color(255, 255, 255));
        B_Campo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Campo.setText("Campos");
        B_Campo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CampoActionPerformed(evt);
            }
        });
        jPanel1.add(B_Campo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 160, 50));

        B_Registro.setBackground(new java.awt.Color(255, 255, 255));
        B_Registro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Registro.setText("Archivo");
        B_Registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_RegistroActionPerformed(evt);
            }
        });
        jPanel1.add(B_Registro, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 160, 50));

        B_Index.setBackground(new java.awt.Color(255, 255, 255));
        B_Index.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Index.setText("Index");
        B_Index.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_IndexActionPerformed(evt);
            }
        });
        jPanel1.add(B_Index, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 160, 50));

        B_Exportar.setBackground(new java.awt.Color(255, 255, 255));
        B_Exportar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Exportar.setText("Exportar");
        B_Exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ExportarActionPerformed(evt);
            }
        });
        jPanel1.add(B_Exportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 160, 50));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("Registro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 160, 50));

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, -1, -1));

        jButton6.setText("jButton6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, -1, -1));

        jButton10.setText("jButton10");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(-280, 0, 700, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_ListarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ListarCampoActionPerformed

    }//GEN-LAST:event_B_ListarCampoActionPerformed

    private void B_ModificarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ModificarCampoActionPerformed
        if (boolCampos) {
            jDialog_EditarCampos.pack();
            jDialog_EditarCampos.setLocationRelativeTo(this);
            jDialog_EditarCampos.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe crear al menos un campo para modificar");
        }
    }//GEN-LAST:event_B_ModificarCampoActionPerformed

    private void B_BorrarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_BorrarCampoActionPerformed
        if (boolCampos) {
            jDialog_BorrarCampo.pack();
            jDialog_BorrarCampo.setLocationRelativeTo(this);
            jDialog_BorrarCampo.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe crear al menos un campo para eliminar");
        }

    }//GEN-LAST:event_B_BorrarCampoActionPerformed

    private void Nombre_CampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nombre_CampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nombre_CampoActionPerformed

    private void B_CrearCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CrearCampoActionPerformed
        jDialog_CrearCampos.pack();
        jDialog_CrearCampos.setLocationRelativeTo(this);
        jDialog_CrearCampos.setVisible(true);
    }//GEN-LAST:event_B_CrearCampoActionPerformed

    private void Nombre_Campo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nombre_Campo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nombre_Campo1ActionPerformed

    private void B_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_EliminarActionPerformed
        Registros r = new Registros();
        Campos c = new Campos();
        r.setListaCampo(Listac);
        c = (Campos) cb_borrarc.getSelectedItem();
        r.getListaCampo().remove(c);
        cb_borrarc.removeItem(c);

        DefaultComboBoxModel modelo3 = (DefaultComboBoxModel) Cb_Indexar.getModel();
        Cb_Indexar.setModel(modelo3);
        modelo3.removeElement(c);
        //actualizar table
        if (boolCampos) {
            eliminarTabla();
            DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
            for (Campos p : Listac) {

                Object[] newRow = {
                    p.getNombre(),
                    p.getData_type(),
                    p.getSize(),
                    p.isIsKey(),};
                modelo2.addRow(newRow);
            }

        } else {

        }
    }//GEN-LAST:event_B_EliminarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Campos c = new Campos();
        c = (Campos) Cb_editarCampo.getSelectedItem();
        boolean llave1 = false;
        for (int i = 0; i < Listac.size(); i++) {
            if (Listac.get(i).isIsKey() && jRadioButton2.isSelected()) {
                llave1 = true;
            }

            if (Listac.get(i).isIsKey() && No1.isSelected()) {
                llave1 = false;
            }
        }
        if (llave1) {
            JOptionPane.showMessageDialog(null, "Ya existe una llave primaria");
        }
        while (llave1 == false) {
            int size = (Integer) jSpinner2.getValue();
            try {
                String name = Nombre_Campo1.getText();
                String tipo = "";
                if (cb_TD1.getSelectedIndex() == 0) {
                    tipo = "String";
                }
                if (cb_TD1.getSelectedIndex() == 1) {
                    tipo = "Char";
                    size = 1;
                }
                if (cb_TD1.getSelectedIndex() == 2) {
                    tipo = "int";
                    size = 32;
                }

                boolean llave;
                if (jRadioButton2.isSelected()) {
                    llave = true;
                } else {
                    llave = false;
                }
                c.setNombre(name);
                c.setData_type(tipo);
                c.setSize(size);
                c.setIsKey(llave);

                JOptionPane.showMessageDialog(this, "editado Excitosamente");
                System.out.println(c.toString());

                boolCampos = true;

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al editar");
            }
            //vaciar y cerrar
            Nombre_Campo.setText("");
            cb_TD.setSelectedIndex(0);
            longS.setValue(1);
            jDialog_CrearCampos.setVisible(false);

            //actualizar table
            if (boolCampos) {
                eliminarTabla();
                DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
                for (Campos p : Listac) {

                    Object[] newRow = {
                        p.getNombre(),
                        p.getData_type(),
                        p.getSize(),
                        p.isIsKey(),};
                    modelo2.addRow(newRow);
                }

            } else {

            }
            llave1 = true;
        }
        llave1 = false;

    }//GEN-LAST:event_jButton2ActionPerformed

    private void B_ExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ExportarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_ExportarActionPerformed

    private void B_IndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_IndexActionPerformed
        jDialog_Indexar.pack();
        jDialog_Indexar.setLocationRelativeTo(this);
        jDialog_Indexar.setVisible(true);
    }//GEN-LAST:event_B_IndexActionPerformed

    private void B_RegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_RegistroActionPerformed
        jDialog_Archivo.pack();
        jDialog_Archivo.setLocationRelativeTo(this);
        jDialog_Archivo.setVisible(true);
    }//GEN-LAST:event_B_RegistroActionPerformed

    private void B_CampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CampoActionPerformed

        if (boolArchivo && boolEntroRegistro) {
            jDialog_Campos.pack();
            jDialog_Campos.setLocationRelativeTo(this);
            jDialog_Campos.setVisible(true);
        } else if (boolArchivo == false) {
            JOptionPane.showMessageDialog(this, "Debe crear un archivo antes de ingresar a la opcion de campos");
        } else {
            JOptionPane.showMessageDialog(this, "Ya no es posible ver campos en este archivo");
        }

        if (boolCampos) {
            eliminarTabla();
            DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
            for (Campos p : Listac) {

                Object[] newRow = {
                    p.getNombre(),
                    p.getData_type(),
                    p.getSize(),
                    p.isIsKey(),};
                modelo2.addRow(newRow);
            }

        } else {

        }
    }//GEN-LAST:event_B_CampoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean llave1 = false;
        for (int i = 0; i < Listac.size(); i++) {
            if (Listac.get(i).isIsKey() && RB1.isSelected()) {
                llave1 = true;
            }

            if (Listac.get(i).isIsKey() && RB2.isSelected()) {
                llave1 = false;
            }
        }
        if (llave1) {
            JOptionPane.showMessageDialog(null, "Ya existe una llave primaria");
        }
        while (llave1 == false) {
            int size = (Integer) longS.getValue();
            try {
                String name = Nombre_Campo.getText();
                String tipo = "";
                if (cb_TD.getSelectedIndex() == 0) {
                    tipo = "String";
                }
                if (cb_TD.getSelectedIndex() == 1) {
                    tipo = "Char";
                    size = 1;
                }
                if (cb_TD.getSelectedIndex() == 2) {
                    tipo = "Int";
                    size = 8;

                }

                boolean llave;
                if (RB1.isSelected()) {
                    llave = true;
                } else {
                    llave = false;
                }
                if (tipo.equals("Int")) {
                    size = 8;
                    ListaL.add(size);
                }
                if (tipo.equals("Char")) {
                    size = 1;
                    ListaL.add(size);
                }
                if (tipo.equals("String")) {
                    ListaL.add(size);
                }

                Campos c1 = new Campos(name, tipo, size, llave);
                Listac.add(c1);
                boolean key = false;

                for (int i = 0; i < Listac.size(); i++) {
                    if (Listac.get(i).isIsKey() == true) {
                        key = true;

                    }

                }
                String[] arreglo = {"S√≠", "No"};
                int opcion = JOptionPane.showOptionDialog(null, "Creado exitosamente. Desea crear otro campo?", "Campos", 0, JOptionPane.QUESTION_MESSAGE, null, arreglo, "");
                if (opcion == 0) {

                } else {
                    if (!key) {
                        JOptionPane.showMessageDialog(null, "Necesitamos una llave primaria m√≠nimo.Porfavor crear una");
                        RB2.setVisible(false);
                        RB1.setSelected(true);
                    } else {
                        jDialog_CrearCampos.setVisible(false);
                        RB2.setVisible(true);
                        RB1.setSelected(false);
                    }

                }
                System.out.println(c1.toString());

                DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_borrarc.getModel();

                cb_borrarc.setModel(modelo);

                modelo.addElement(c1);

                DefaultComboBoxModel modelo2 = (DefaultComboBoxModel) Cb_editarCampo.getModel();
                Cb_editarCampo.setModel(modelo2);
                modelo2.addElement(c1);

                DefaultComboBoxModel modelo3 = (DefaultComboBoxModel) Cb_Indexar.getModel();
                Cb_Indexar.setModel(modelo3);
                modelo3.addElement(c1);

                boolCampos = true;

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al crear");
            }
            //vaciar y cerrar
            Nombre_Campo.setText("");
            cb_TD.setSelectedIndex(0);
            longS.setValue(1);
            for (int i = 0; i < Listac.size(); i++) {
                if (Listac.get(i).isIsKey() == true) {

                    ListaKeyPos.add(i);
                }

            }
            for (int i = 0; i < ListaKeyPos.size(); i++) {
                donde = ListaKeyPos.get(i);
                System.out.println("La llave se encuentra en la pos: " + ListaKeyPos.get(i));
            }
            //actualizar table
            if (boolCampos) {
                eliminarTabla();
                DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
                for (Campos p : Listac) {

                    Object[] newRow = {
                        p.getNombre(),
                        p.getData_type(),
                        p.getSize(),
                        p.isIsKey(),};
                    modelo2.addRow(newRow);
                }

            } else {

            }
            llave1 = true;
        }
        llave1 = false;


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (boolArchivo == true && boolCampos == true) {
            int resp = JOptionPane.showConfirmDialog(this, "¬øEsta seguro que ya no quiere agregar/modificar/eliminar algun campo?");
            if (resp == 0) {
                jDialog_CrearRegistro.pack();
                jDialog_CrearRegistro.setLocationRelativeTo(this);
                jDialog_CrearRegistro.setVisible(true);
                boolEntroRegistro = false;
            } else {
                //no puede ingresar al menu de registro
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe crear un archivo y por lo menos un campo para ingresar a la opcion de registro");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void B_NuevoRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_NuevoRegistro1ActionPerformed
        Registros r = new Registros();
        primA = true;
        boolean val = true;
        r.setListaCampo(Listac);
        boolean valid = false;
        String pal = "";
        String valint = "";
        String prim = "";
        int value = 0;
        boolean valid2 = false;
        String k = "";
        ArrayList<String> ListaS1 = new ArrayList();
        ArrayList<String> ListaWR = new ArrayList();
        //primera vez metes la llave aqui
        //meter si no se repite
        //donde//guarda donde esta llave

        //
        //try catch necesario
        int llave = 0;

        for (int i = 0; i < r.getListaCampo().size(); i++) {

            if (r.getListaCampo().get(i).getData_type().equals("String") || r.getListaCampo().get(i).getData_type().equals("Char")) {

                do {
                    if (!valid) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Longitud invalida");
                    }

                    pal = JOptionPane.showInputDialog(r.getListaCampo().get(i).getNombre());

                    valid = true;
                } while (pal.length() > r.getListaCampo().get(i).getSize());
                if (i == donde) {
                    if (pv) {
                        listaK1.add(pal);
                        k = pal;

                        llave = Integer.parseInt(pal);
                        System.out.println("LLAVE A LISTA: " + pal);
                        pv = false;
                    } else {
                        if (listaK1.contains(pal)) {
                            do {
                                JOptionPane.showMessageDialog(null, "Ya existe la llave");
                                pal = JOptionPane.showInputDialog(r.getListaCampo().get(i).getNombre());
                            } while (listaK1.contains(pal));

                            listaK1.add(pal);
                            k = pal;

                            llave = Integer.parseInt(pal);
                            System.out.println("LLAVE A LISTA: " + pal);
                        } else {
                            listaK1.add(pal);
                            k = pal;

                            llave = Integer.parseInt(pal);
                            System.out.println("LLAVE A LISTA: " + pal);
                            pv = false;
                        }
                    }
                }//meter si solo es la primera vez
                ListaS.add(pal);
                prim += pal;
                ListaS1.add(pal);
                //cc3+=pal.length();
                mdsize = writeMD().length();

            } else {

                try {

                    valid2 = false;
                    do {
                        if (valid2) {
                            JOptionPane.showMessageDialog(null, "Se excede del tama√±o de caracteres");
                            valint = JOptionPane.showInputDialog(r.getListaCampo().get(i).getNombre());
                            value = Integer.parseInt(valint);
                        } else {

                            try {
                                valint = JOptionPane.showInputDialog(r.getListaCampo().get(i).getNombre());

                                value = Integer.parseInt(valint);
                                val = true;
                            } catch (NumberFormatException e) {
                                val = false;
                                JOptionPane.showMessageDialog(this, "No es un N√∫mero.");
                            }

                        }
                        if (valint.length() > 8) {
                            valid2 = true;
                        }

                    } while (valint.length() > 8 || !val);
                    valid2 = false;

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Entrada invalida");
                    System.out.println(e);
                    valid2 = true;
                }
                if (i == donde) {
                    if (pv) {
                        listaK1.add(value + "");
                        k = value + "";
                        llave = value;

                        System.out.println("LLAVE A LISTA: " + value);
                        pv = false;
                    } else {
                        if (listaK1.contains(value + "")) {

                            do {

                                if (listaK1.contains(value + "")) {
                                    JOptionPane.showMessageDialog(null, "Ya existe la llave");
                                }
                                try {
                                    valint = JOptionPane.showInputDialog(r.getListaCampo().get(i).getNombre());
                                    value = Integer.parseInt(valint);
                                    val = true;
                                } catch (NumberFormatException e) {
                                    val = false;
                                    JOptionPane.showMessageDialog(this, "No es un N√∫mero.");
                                }
                                if (valint.length() > 8) {
                                    JOptionPane.showMessageDialog(this, "Excede el tama√±o");
                                }
                            } while (listaK1.contains(value + "") || !val || valint.length() > 9);
                            listaK1.add(value + "");
                            k = value + "";
                            llave = value;

                            System.out.println("LLAVE A LISTA: " + value);
                        } else {
                            listaK1.add(value + "");
                            k = value + "";
                            llave = value;

                            System.out.println("LLAVE A LISTA: " + value);
                            pv = false;
                        }
                    }
                }//meter si es primera vez
                ListaS.add(value + "");
                ListaS1.add(value + "");
                prim += value;
                //cc3+=pal.length();
            }
            valid = false;

        }

        r.setListaString(ListaS);

        LLave l1 = new LLave();
        if (!valid2) {
            if (ap.isPrimero() == false) {
                //Nombres del archivo bin para cargar el arbol
                int p = ap.getName().indexOf('.');
                String nombre_archivob = "./" + ap.getName() + ".bin";/////
                Arbolb tree1 = ap.getBtree();

                System.out.println("Primera Vez en: " + ap.getName());
                //
                String fin = "";
                String fin1 = "";
                String fin2 = "";
                String fin3 = "";
                int w = 0;

                for (int i = 0; i < ListaS1.size(); i++) {
                    fin = ListaS1.get(i);

                    while (w < r.getListaCampo().size()) {
                        int l = ListaL.get(w);
                        fin2 = fixSpace(fin, l);
                        fin3 += fin2 + "|";

                        break;

                    }
                    w++;

                }

                long offset = fin3.length();
                //;
                ap.setName(nameArchivo);

                try {
                    int n;
                    if (ap.getAvailList().isEmpty()) {
                        System.out.println("NAME: " + ap.getName());
                        RandomAccessFile raf = new RandomAccessFile(ap.getName(), "rw");
                        long md = writeMD().length();
                        raf.seek(raf.length());
                        offset = raf.getFilePointer();

                        raf.writeChars(fin3);
                        raf.writeChars("\n");
                        raf.close();
                        l1.setOffset(offset);
                        l1.setLlave(llave);
                        tree1.insert(l1);
//                tree1.write(tree1,nombre_archivob);

                        writeB(namebin, tree1);
                        ap.setBtree(tree1);

                    } else {
                        RandomAccessFile raf = new RandomAccessFile(ap.getName(), "rw");

                        System.out.println("SIZE: " + ap.getAvailList().size());
                        String o = ap.getAvailList().get(0) + "";
                        System.out.println("OFF: " + o);

                        n = ap.getAvail1().get(0);
                        int nn = Integer.parseInt(o);
                        raf.seek(nn);

                        raf.writeChars(fin3);
                        raf.writeChars("\n");

                        l1.setOffset(nn);
                        l1.setLlave(llave);
                        tree1.insert(l1);
//                tree1.write(tree1,nombre_archivob);

                        writeB(namebin, tree1);
                        ap.setBtree(tree1);

                        ap.getAvailList().remove(ap.getAvailList().get(0));

                        System.out.println("SIZE: " + ap.getAvailList().size());
                        raf.seek(donde2);

                        if (ap.getAvailList().isEmpty()) {
                            raf.writeBytes("N");

                        }
                        for (int i = 0; i < ap.getAvailList().size(); i++) {

                            System.out.println("AVAIL new: " + ap.getAvailList().get(i));
                            raf.writeBytes(ap.getAvailList().get(i) + ";");

                        }
                        raf.writeBytes("                                                                                                                      ");
                        raf.close();
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }

                ListaS1.clear();
                System.out.println("PALABRA: " + fin3);

                JOptionPane.showMessageDialog(this, "CREADO");
            } else {
                ap.primero = true;
                System.out.println("NO ES Primera Vez en: " + ap.getName());
            }

        }

        boolRegistro = true;

    }//GEN-LAST:event_B_NuevoRegistro1ActionPerformed
    public String fixSpace(String registro, int longitud) {

        int length = longitud - registro.length();

        for (int i = 0; i < length; i++) {
            registro += " ";
        }

        return registro;
    }
    private void B_NuevoArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_NuevoArchivoActionPerformed
        String camino = "";

        File fichero = null;
        FileReader fr = null;
        BufferedReader br = null;

        try {
            JFileChooser jfc = new JFileChooser("./");

            int seleccion = jfc.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                camino = jfc.getSelectedFile().getPath();
                //ap.setName(jfc.getSelectedFile().getName()+".txt");
                //nameArchivo = "";
            }

        } catch (Exception e) {

        }

        try {
            namebin = camino;

            //JOptionPane.showInputDialog(this, "NOMBRE DE ARCHIVO A CREAR");
            // nameArchivo += ".txt";
            ap.crearArchivo(camino, nameArchivo);
            nameArchivo = camino + ".txt";
            ap.setName(nameArchivo);

            System.out.println("NAME " + ap.getName());
            listaA.add(ap);
            boolArchivo = true;
            Arbolb t = new Arbolb(6);
            ap.setBtree(t);
            System.out.println("CAMINO B:: " + namebin);
            writeB(namebin, t);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo crear Archivo");
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);

        }
        jDialog_Archivo.setVisible(false);
        boolGuardado = false;

    }//GEN-LAST:event_B_NuevoArchivoActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        int cont1 = 1;
        boolRegistro = true;
        boolArchivo = true;
        boolCampos = true;
        System.out.println("hola1");
        String[] names = {"Venecia", "Sevilla", "Nueva York",
            "Lhasa", "Londres", "Marrakech", "Petra", "Roma", "Varanasi", "Florencia",
            "La habana", "Kyoto", "Jersualen", "Paris", "Beijing", "Lalibela", "Granada",
            "Atenas", "Bagan", "Katmand√∫", "Vaticano", "Lisboa", "Tokio", "Estambul",
            "Hoi An", "Amsterdam", "Luxor", "Berlin", "Santiago", "Jaipur", "Lyon", "Oia",
            "Siem Reap", "Viena", "Cuzco", "Cartagena", "Zanz√≠bar", "Puebla", "Singapur",
            "Las vegas", "Samarkand", "Sydney", "Nacaome", "Dubrovnik", "Bangkok", "Antigua", "Praga",
            "Budapest", "Amsterdam", "Barcelona", "Turin", "Beirut", "Brujas", "Budapest", "Cartagena", "Copenhague", "Cuzco",
            "Doha", "Edimburgo", "Florencia", "Hanoi", "Hawaii", "Hong Kong", "Estambul", "Jaipur", "Mascate", "Oporto", "Quito", "Tallin", "La valeta", "Choluteca"};
        //person name , person age,city ID and person ID

        Campos c1 = new Campos("CityId", "Int", 8, true);
        Campos c2 = new Campos("CityName", "String", 12, false);
        ListaL.add(8);
        ListaL.add(12);

        ArrayList<Integer> CityIDval = new ArrayList();

        CityIDval.add(0);
        ArrayList<Campos> lc = new ArrayList();

        ArrayList<String> ls = new ArrayList();
        Registros re1 = new Registros();

        lc.add(c1);
        lc.add(c2);

        String s1;
        String s2;
        String s3;
        String s4;
        re1.setListaCampo(lc);
        Listac = re1.getListaCampo();

        Arbolb t = new Arbolb(6);
        ap.setBtree(t);
        namebin = "Prueba2";
        writeB(namebin, t);
        try {
            ap.crearArchivo("Prueba2", "");
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        ap.setName("Prueba2.txt");
        nameArchivo = "Prueba2.txt";

        try {
            ap.escribirArchivo(writeMD());
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        re1.setListaString(ls);

        String pal = "";
        //System.out.println("SIZE: "+re1.getListaCampo().size());

        String fin5 = "";
        String fin6 = "";
        String fin7 = "";
        String fin8 = "";
        String fin9 = "";
        String fin10 = "";
        int w = 0;
        int cont = 0;
        int cont2 = 0;
        int con = writeMD().length();
        int e = writeMD().length();
        for (int i = 0; i < 1000; i++) {
            Random r1 = new Random();
            Random r2 = new Random();
            Random r3 = new Random();

            int x1 = 0;
            x1 += r1.nextInt(46);//nombres
            int x2 = 0;

            int x3 = -1;
            int x4 = 0;

            x3 = r3.nextInt(80000000);//City ID 
            if (!CityIDval.contains(x3)) {
                CityIDval.add(x3);
                //System.out.println("ID: "+x3);
            }

            s3 = x3 + "";
            s1 = names[x1];//agarro nombres
            s4 = x4 + "";
            //lc.add(c4);
            ls.add(s3);

            //agregado primer campo
            s2 = x2 + "";
            //lc.add(c1);
            ls.add(s1);

            if (cont <= 1000) {
                LLave l1 = new LLave();
                fin5 = re1.getListaString().get(cont);
                int k = 0;
                while (w <= 2) {

                    if (w == 2) {
                        //luis,m232,323,32
                        //weawe.34343.4343
                        //System.out.println("OFFSET: "+fin9.length());

                        RandomAccessFile raf;
                        try {

                            raf = new RandomAccessFile(ap.getName(), "rw");
                            long md = writeMD().length();
                            ap.escribirArchivo(writeMD());
                            raf.seek(writeMD().length());

                            raf.writeChars(fin7);
                            raf.writeChars("\n");
                            raf.close();

                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        if (prim1 == true) {
                            System.out.println("PRIMERA: " + writeMD().length());

                            l1.setOffset(writeMD().length());

                            t.insert(l1);
                            writeB(namebin, ap.getBtree());
                            prim1 = false;
                            fin9 = "";

                        } else {

                            LLave ll1 = t.buscarLlave(t.getRaiz(), k);
                            if (ll1 == null) {
                                //System.out.println("PALABRA: "+fin10);

                                con += 46;
                                System.out.println("OFFSET: " + con);

                                //System.out.println("OFFSET: "+e);
                                l1.setOffset(con);
                                fin10 = "";

                                t.insert(l1);
                                writeB(namebin, ap.getBtree());
                                fin9 = "";

                            } else {
                                cont2++;

                            }
                        }
                        fin7 += "\n";

                    } else {

                        if (w == 0) {

                            fin5 = re1.getListaString().get(cont);
                            //System.out.println("LLAVE A AGREGAR: "+fin5);
                            k = Integer.parseInt(fin5);
                            l1.setLlave(k);

                        }

                        fin5 = re1.getListaString().get(cont);
                        int l = re1.getListaCampo().get(w).getSize();
                        fin6 = fixSpace(fin5, l);
                        fin7 += fin6 + "|";
                        fin8 += fin7;
                        fin9 += fin6 + "|";
                        fin10 += fin6 + "|";
                        cont++;
                    }

                    w++;
                }
                w = 0;
            }

        }

        ap.setBtree(t);

        System.out.println("VECES REPETIDAS: " + cont2);
        //System.out.println("ARBOL: ");
        System.out.println("AVAIL OFF: " + donde2);

        //"CAMPOS: 4 "+"\n"+
        //+"\n"+"AVAILIST HEAD: NULL "+"\n";

    }//GEN-LAST:event_jButton5MouseClicked

    private void B_GuardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_GuardarArchivoActionPerformed
        // TODO add your handling code here:
        /*
          ArrayList<String> listaK1=new ArrayList();
    ArrayList<Integer> ListaL = new ArrayList();
    ArrayList<Campos> Listac = new ArrayList();
    ArrayList<String> ListaS = new ArrayList();
    ArrayList<Integer> ListaKeyPos = new ArrayList();//posici√≥n de las llaves.
         */
        //if (boolArchivo && boolEntroRegistro) {
        //4
        //;
        Cb_Indexar.removeAllItems();
        boolArchivo = true;
        boolEntroRegistro = true;
        Registros r = new Registros();
        Arbolb t = ap.getBtree();
        ap.getAvail1().clear();
        ap.getAvailList().removeAll(ap.getAvailList());
        writeB(namebin, ap.getBtree());
        Listac.clear();
        ListaS.clear();
        listaK1.clear();
        ListaL.clear();
        ListaKeyPos.clear();
        r.getListaCampo().clear();
        r.getListaString().clear();
        ap.close(ap.getName());
        eliminarTabla();
        JOptionPane.showMessageDialog(this, "GUARDADO Y CERRADO EXITOSAMENTE");
        boolGuardado = true;
        pv = true;
    }//GEN-LAST:event_B_GuardarArchivoActionPerformed

    private void B_AbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_AbrirArchivoActionPerformed
        // if (boolGuardado) {
        JFileChooser fileChooser = new JFileChooser("./");
        boolRegistro = true;
        boolArchivo = true;
        boolEntroRegistro = true;
        boolArchivo = true;
        boolCampos = true;
        primA = false;
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            int cont = 0;

            File archivo = fileChooser.getSelectedFile();
            nameArchivo = archivo.getName();
            System.out.println("name: " + nameArchivo);
            ap.setArchivo(archivo);
            ap.setName(archivo.getName());
            RandomAccessFile file_a;
            try {
                file_a = new RandomAccessFile(ap.getName(), "rw");
                file_a.seek(0);//128
                String seek = file_a.readLine();
                System.out.println("CANTIDAD: " + seek);
                long off = seek.length();
                int para = Integer.parseInt(seek);
                ArrayList<String> listat = new ArrayList();
                String add = "";

                file_a.seek(off + 1);
                int o = seek.length();
                Scanner sc = null;
                Scanner sc2 = null;
                String fal = writeMD();
                file_a.close();

                String file = "";

                sc = new Scanner(ap.getArchivo());
                System.out.println("1");

                file = sc.nextLine();

                System.out.println("2");
                file = "";
                while (cont < para) {

                    file += sc.nextLine();
                    cont++;

                }

                sc2 = new Scanner(file);
                String re = file;
                System.out.println("Revisar: " + re);
                sc2.useDelimiter(";");
                System.out.println("file 1: " + file);
                //System.out.println(file);
                Registros r = new Registros();
                for (int i = 0; i < para; i++) {
                    Campos c1 = new Campos();
                    c1.setNombre(sc2.next());
                    c1.setData_type(sc2.next());
                    c1.setSize(sc2.nextInt());
                    c1.setIsKey(sc2.nextBoolean());
                    r.getListaCampo().add(c1);
                    DefaultComboBoxModel modelo3 = (DefaultComboBoxModel) Cb_Indexar.getModel();
                    Cb_Indexar.setModel(modelo3);
                    modelo3.addElement(c1);
                }
                int size = 0;
                for (int i = 0; i < r.getListaCampo().size(); i++) {
                    Campos c4 = r.getListaCampo().get(i);
                    System.out.println(c4.getNombre() + " " + c4.getData_type() + " " + c4.getSize() + " " + c4.isIsKey());
                    if (c4.isIsKey() == true) {
                        donde = i;

                    }
                    String tipo = c4.getData_type();
                    size = c4.getSize();
                    if (tipo.equals("Int")) {

                        ListaL.add(size);
                    }
                    if (tipo.equals("Char")) {
                        size = 1;
                        ListaL.add(size);
                    }
                    if (tipo.equals("String")) {
                        ListaL.add(size);
                    }
                }
                for (int i = 0; i < ListaL.size(); i++) {
                    System.out.println("LISTAL: " + ListaL.get(i));

                }
                System.out.println("LLAVE ESTA EN: " + donde);
                Listac = r.getListaCampo();
                int p = ap.getName().indexOf('.');
                String nombre_archivob = "./" + ap.getName() + ".bin";

                Arbolb t1;
                //t1.load(nombre_archivob); 

                String name = archivo.getName();
                int iend = name.indexOf("."); //this finds the first occurrence of "." 

                String subString = "";
                if (iend != -1) {
                    subString = name.substring(0, iend); //this will give abc
                }
                namebin = subString;
                System.out.println("NEW NAME: " + namebin);
                ap.setPrimero(false);
                cargarArbol(namebin);
                int cam = Listac.size();
                int fals = 10 - cam;
                re += seek + "\n";
                for (int i = 0; i < 10; i++) {
                    re += "\n";

                }
                re += "TIPO ARCHIVO: .txt" + "\n";
                System.out.println("RE S: " + re);
                System.out.println("RE: " + re.length());
                donde2 = re.length();
                file_a = new RandomAccessFile(ap.getName(), "rw");
                file_a.seek(donde2);
                String ss = "";
                ss = file_a.readLine();
                if (!ss.contains("N")) {
                    //String ne = ss.replaceAll(" ", "");
                    System.out.println(ss);
                    String tok[] = ss.split(";");
                    for (int i = 0; i < tok.length; i++) {
                        if (!tok[i].contains(" ")) {
                            int l = Integer.parseInt(tok[i]);
                            ap.getAvail1().add(l);
                            ap.getAvailList().add(tok[i]);
                        }
                    }
                    System.out.println("CANTIDAD EN AV: " + ap.getAvailList().size());
                    for (int i = 0; i < ap.getAvailList().size(); i++) {
                        System.out.println("AVAIL: " + ap.getAvailList().get(i));
                    }

                } else {
                    ap.getAvailList().removeAll(ap.getAvailList());
                    System.out.println("AVAIL VACIA");
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }

            //} else {
            //}
        }
    }//GEN-LAST:event_B_AbrirArchivoActionPerformed

    private void Cb_editarCampoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Cb_editarCampoItemStateChanged
        Campos c = new Campos();
        c = (Campos) Cb_editarCampo.getSelectedItem();
        Nombre_Campo1.setText(c.getNombre());
        jSpinner2.setValue(c.getSize());


    }//GEN-LAST:event_Cb_editarCampoItemStateChanged

    private void B_AbrirRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_AbrirRegistroActionPerformed
        // TODO add your handling code here:
        if (boolRegistro && boolGuardarRegistro) {
            //ya hay registros creados
        } else if (boolRegistro == false) {
            JOptionPane.showMessageDialog(this, "Debe haber creado al menos un registro para ingresar a esta opcion");
        } else if (boolGuardarRegistro == false) {
            JOptionPane.showMessageDialog(this, "Debe guardar el registro antes de abrirlo");
        }

    }//GEN-LAST:event_B_AbrirRegistroActionPerformed

    private void B_CerrarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CerrarRegistroActionPerformed
        // TODO add your handling code here:
        if (boolRegistro) {
            //ya hay registros creados

            try {

                String keys = JOptionPane.showInputDialog(this, "INGRESE LLAVE A ELIMINAR");
                int key = Integer.parseInt(keys);
                LLave l1 = new LLave();
                Arbolb tree1 = ap.getBtree();
                l1 = tree1.buscarLlave(tree1.getRaiz(), key);
                if (l1 == null) {
                    JOptionPane.showMessageDialog(this, "INGRESE LLAVE DE NUEVO");

                } else {
                    //try {
                    System.out.println("SI ESTA LLAVE");

                    boolean sepudo = tree1.eliminar(tree1.getRaiz(), l1);
                    System.out.println("SI SE PUDO ELIMINAR");

                    RandomAccessFile raf = new RandomAccessFile(ap.getName(), "rw");

                    raf.seek(l1.getOffset());

                    raf.writeChars("*");
                    ap.getAvailList().add(l1.getOffset() + "");
                    int n2 = (int) l1.getOffset();
                    ap.getAvail1().add(n2);
                    System.out.println("SE ELIMINO");
                    raf.seek(donde2);
                    System.out.println("DONDE2: " + donde2);

                    String dp = "";
                    for (int i = 0; i < ap.getAvailList().size(); i++) {

                        //raf.writeChars(ap.getAvailList().get(i)+";");
                        raf.writeBytes(ap.getAvailList().get(i) + ";");
                        //dp+=ap.getAvailList().get(i)+";";
                        // raf.writeInt(n2);

                    }
                    //raf.writeBytes("\n" + "\n" + "\n" + "\n" + "\n" + "\n" + "\n" + "_" );
                    raf.close();

                    JOptionPane.showMessageDialog(null, "Funcion√≥");

                }

            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe haber creado al menos un registro para ingresar a esta opcion");
        }
    }//GEN-LAST:event_B_CerrarRegistroActionPerformed

    private void cb_TDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_TDItemStateChanged
        if (cb_TD.getSelectedItem().equals("Int") || cb_TD.getSelectedItem().equals("Char")) {
            jLabel_CrearCampo3.setVisible(false);
            longS.setVisible(false);
        } else {
            jLabel_CrearCampo3.setVisible(true);
            longS.setVisible(true);
        }
    }//GEN-LAST:event_cb_TDItemStateChanged

    private void GuardarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCamposActionPerformed
        String cc1 = "";

        for (int i = 0; i < Listac.size(); i++) {
            Campos c1 = Listac.get(i);
            String size1 = c1.getSize() + "";
            cc1 += c1.getNombre() + ";" + c1.getData_type() + ";" + size1 + ";" + c1.isIsKey() + ";" + "\n";

        }
        //"CAMPOS: 4 "+"\n"+
        //+"\n"+"AVAILIST HEAD: NULL "+"\n";
        int diff = 10 - Listac.size();
        String pal2 = "";
        String esp = "";
        for (int i = 0; i < diff; i++) {
            esp += "\n";
        }

        // pal2 += Listac.size() + "\n" + cc1 + esp + "Cantidad de Registros: " + Listac.size()
        //  + " \n AVAILIST HEAD: NULL  " + "\n" + "\n" + "\n" + "\n" + "\n" + "\n" + "\n" + "_" + "\n";
        pal2 = writeMD();
        ap.setName(nameArchivo);
        try {
            ap.escribirArchivo(pal2);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarCamposActionPerformed
    public String writeMD() {
        String cc1 = "";

        for (int i = 0; i < Listac.size(); i++) {
            Campos c1 = Listac.get(i);
            String size1 = c1.getSize() + "";
            cc1 += c1.getNombre() + ";" + c1.getData_type() + ";" + size1 + ";" + c1.isIsKey() + ";" + "\n";

        }
        //"CAMPOS: 4 "+"\n"+
        //+"\n"+"AVAILIST HEAD: NULL "+"\n";
        String pal2 = "";
        String esp = "";
        int c = 10;
        while (c > Listac.size()) {
            int diff = 10 - Listac.size();

            //for (int i = 0; i < diff; i++) {
            esp += "\n";
            c--;
            //3,10
            //}
        }
        pal2 += Listac.size() + "\n" + cc1 + esp + "TIPO ARCHIVO: .txt"
                + "\n"
                + "N                                                                                                                                                                 "
                + "\n" + "\n" + "\n" + "\n" + "\n" + "\n" + "\n" + "_" + "\n";
        String hasta = Listac.size() + "\n" + cc1 + esp + "TIPO ARCHIVO: .txt"
                + "\n";
        donde2 = hasta.length();

        return pal2;
    }
    //

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //inserto NUMEROS 1,2,3,15,6,70,28,8

        // tree.print(tree.raiz);
        Arbolb tree1 = ap.getBtree();;
        tree1.Show();
        //search llave 28
        // LLave mia=tree.buscarLlave(tree.raiz, 37);
        System.out.println("");
        //System.out.println("LLAVE ENCONTRADA:  "+mia.getLlave());


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        //insert 1,2,40,5,60,7,80
        LLave l1 = new LLave(12121, 1);
        LLave l2 = new LLave(12121, 2);
        LLave l3 = new LLave(12121, 3);
        LLave l4 = new LLave(12121, 4);
        LLave l5 = new LLave(12121, 5);
        LLave l6 = new LLave(12121, 6);
        LLave l7 = new LLave(12121, 7);
        LLave l8 = new LLave(12121, 8);
        LLave l9 = new LLave(12121, 9);
        LLave l10 = new LLave(12121, 10);
        LLave l11 = new LLave(12121, 11);
        LLave l12 = new LLave(12121, 12);
        Arbolb Bprueba = new Arbolb(6);
        Bprueba.insert(l1);
        Bprueba.insert(l2);
        Bprueba.insert(l3);
        Bprueba.insert(l4);
        Bprueba.insert(l5);
        Bprueba.insert(l6);
        Bprueba.insert(l7);
        Bprueba.insert(l8);
        Bprueba.insert(l9);
        Bprueba.insert(l10);
        Bprueba.insert(l11);
        Bprueba.insert(l12);
        //ver si esta el nodo a eliminar

        System.out.println("");
        System.out.println("ARBOL ANTES DE ELIMINAR");
        Bprueba.Show();
        System.out.println("");
        Nodo n = Bprueba.buscarEliminado(Bprueba.getRaiz(), l3.getLlave());
        boolean sepudo = Bprueba.eliminar(Bprueba.getRaiz(), l3);
        if (sepudo == true) {
            System.out.println("ELIMINAR 3");
            System.out.println("");
            System.out.println("ARBOL DESPUES DE ELIMINAR");
            Bprueba.Show();
            System.out.println("");

        }


    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        //availist
        try {
            System.out.println("adentro");
            RandomAccessFile file_a = new RandomAccessFile(ap.getName(), "rw");
            file_a.seek(donde2);//128
            String seek = file_a.readLine();
            System.out.println("Soy el seek: " + seek);
            long off = donde2;
            off = file_a.getFilePointer();
            file_a.writeChars("BUSCANDO");
            // file_a.wr
            JOptionPane.showMessageDialog(null, "Funcion√≥");
        } catch (Exception e) {
            System.out.println(e);

        }
        System.out.println("salgo");


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            Registros r = new Registros();
            String keys = JOptionPane.showInputDialog(this, "INGRESE LLAVE A ELIMINAR");
            int key = Integer.parseInt(keys);
            LLave l1 = new LLave();
            Arbolb tree1 = ap.getBtree();
            l1 = tree1.buscarLlave(tree1.getRaiz(), key);
            if (l1 == null) {

            } else {
                try {
                    System.out.println("adentro");
                    RandomAccessFile file_a = new RandomAccessFile(ap.getName(), "rw");
                    file_a.seek(l1.getOffset() + 1);//128
                    String seek = file_a.readLine();
                    //System.out.println("Soy el seek: " + seek);
                    JOptionPane.showMessageDialog(this, "SE ELIMINARA: " + seek);
                    int rest = seek.length();

                    //file_a.writeUTF("soy seek");
                    // file_a.wr
                    JOptionPane.showMessageDialog(null, "Funcion√≥");
                    System.out.println("RESTA: " + rest);
                    long offset = (l1.getOffset() + 1);
                    System.out.println("NEW OFF: " + offset);

                    file_a.seek(offset);

                    file_a.writeChars("MIERDA|2|");

                    //file_a.writeChars();
                    file_a.close();

                } catch (Exception e) {
                    System.out.println(e);

                }

            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        int k;
        System.out.println("INGRESE LLave: ");
        k = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese LLave: "));
        Arbolb t = ap.getBtree();
        LLave l1 = t.buscarLlave(t.getRaiz(), k);
        System.out.println("OOFFSET: " + l1.getOffset());
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (boolRegistro) {
            //ya hay registros creados
            try {
                Registros r = new Registros();
                String keys = JOptionPane.showInputDialog(this, "INGRESE LLAVE DE REGISTRO");
                int key = Integer.parseInt(keys);
                LLave l1 = new LLave();
                Arbolb tree1 = ap.getBtree();
                l1 = tree1.buscarLlave(tree1.getRaiz(), key);
                if (l1 == null) {
                    JOptionPane.showMessageDialog(this, "INGRESE LLAVE DE NUEVO");

                } else {
                    try {
                        if (nameArchivo.equals("Prueba1.txt") || nameArchivo.equals("Prueba2.txt")) {
                            RandomAccessFile file_a = new RandomAccessFile(ap.getName(), "rw");
                            file_a.seek(l1.getOffset() + 1);//128
                            String seek = file_a.readLine();
                            //System.out.println("Soy el seek: " + seek);
                            JOptionPane.showMessageDialog(this, "SE MODIFICARA: " + seek);

                            int p = ap.getName().indexOf('.');
                            String nombre_archivob = "./" + ap.getName() + ".bin";/////

                            int rest = seek.length();

                            long offset = (l1.getOffset() + 1);
                            //System.out.println("NEW OFF: "+offset);

                            file_a.seek(offset);
                            String ss = "";
                            String kk = "";
                            String fin2 = "";
                            String fin3 = "";
                            String fin4 = "";
                            String com1 = "";
                            String com2 = "";
                            String com3 = "";

                            r.setListaCampo(Listac);
                            int w = 1;
                            //1212,luis,13,1313
                            //2121|
                            //Walter,23,4242
                            for (int i = 0; i < r.getListaCampo().size(); i++) {
                                if (r.getListaCampo().get(i).isIsKey() == true) {
                                    donde = i;

                                }

                            }
                            System.out.println("DONDE: " + donde);
                            for (int i = 0; i < r.getListaCampo().size(); i++) {
                                if (r.getListaCampo().get(i).isIsKey() == false) {
                                    ss = JOptionPane.showInputDialog(this, "Ingrese: " + r.getListaCampo().get(i).getNombre());
                                    while (w < r.getListaCampo().size()) {
                                        //if (donde != w) {
                                        int l = ListaL.get(w);
                                        fin2 = fixSpace(ss, l);
                                        fin3 += fin2 + "|";
                                        com1 += fin2 + "|";
                                        //}

                                        break;

                                    }
                                    w++;
                                } else {
                                    while (w < r.getListaCampo().size()) {
                                        int l = ListaL.get(donde);
                                        com2 = fixSpace(l1.getLlave() + "", l);
                                        com3 += com2 + "|";

                                        break;

                                    }

                                }

                            }
                            System.out.println("1: " + com1);
                            System.out.println("2: " + com2);
                            String m = com3 + com1;
                            System.out.println("SEEK: " + seek);
                            RandomAccessFile raf = new RandomAccessFile(ap.getName(), "rw");
                            long md = writeMD().length();
                            raf.seek(l1.getOffset());

                            raf.writeChars(m);
                            //raf.writeChars("\n");
                            raf.close();

                            //file_a.writeChars("*");
                            //file_a.writeChars();
                            JOptionPane.showMessageDialog(null, "Funcion√≥");

                        } else {
                            RandomAccessFile file_a = new RandomAccessFile(ap.getName(), "rw");
                            file_a.seek(l1.getOffset() + 1);//128
                            String seek = file_a.readLine();
                            //System.out.println("Soy el seek: " + seek);
                            JOptionPane.showMessageDialog(this, "SE MODIFICARA: " + seek);

                            int p = ap.getName().indexOf('.');
                            String nombre_archivob = "./" + ap.getName() + ".bin";/////

                            int rest = seek.length();

                            long offset = (l1.getOffset() + 1);
                            //System.out.println("NEW OFF: "+offset);
                            //luis,1,20
                            file_a.seek(offset);
                            String ss = "";
                            String kk = "";
                            String fin2 = "";
                            String fin3 = "";
                            String fin4 = "";
                            r.setListaCampo(Listac);
                            int w = 0;
                            for (int i = 0; i < r.getListaCampo().size(); i++) {
                                if (r.getListaCampo().get(i).isIsKey() == true) {
                                    donde = i;

                                }

                            }
                            ArrayList<String> listam = new ArrayList();
                            for (int i = 0; i < r.getListaCampo().size(); i++) {
                                if (r.getListaCampo().get(i).isIsKey() == false) {
                                    ss = JOptionPane.showInputDialog(this, "Ingrese: " + r.getListaCampo().get(i).getNombre());
                                    while (w < r.getListaCampo().size()) {
                                            if(w==donde){
                                                w+=1;
                                            }
                                            int l = ListaL.get(w);
                                            fin2 = fixSpace(ss, l);
                                            fin3 += fin2 + "|";
                                            listam.add(fin2 + "|");
                                        

                                        break;

                                    }
                                    w++;
                                } else {
                                    ss += l1.getLlave() + "|";
                                    String a = fixSpace(l1.getLlave() + "", ListaL.get(donde));
                                    listam.add(a + "|");

                                }

                            }
                            String col = "";
                            for (int i = 0; i < listam.size(); i++) {
                                System.out.println("STRING: " + listam.get(i));
                                col += listam.get(i);
                            }

                            RandomAccessFile raf = new RandomAccessFile(ap.getName(), "rw");
                            long md = writeMD().length();
                            raf.seek(l1.getOffset());

                            raf.writeChars(col);
                            //raf.writeChars("\n");
                            raf.close();

                            //file_a.writeChars("*");
                            //file_a.writeChars();
                            JOptionPane.showMessageDialog(null, "Funcion√≥");

                        }/*
                        
                            
                         */
                    } catch (Exception e) {
                        System.out.println(e);

                    }

                }

            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe haber creado al menos un registro para ingresar a esta opcion");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        int cont1 = 1;
        boolArchivo = true;
        boolCampos = true;
        boolRegistro = true;
        System.out.println("hola");
        String[] names = {"Sofia", "Camila", "Valentina",
            "Isabella", "Valeria", "Daniela", "Mariana", "Sara", "Victoria", "Gabriela",
            "Ximena", "Andrea", "Natalia", "Martina", "Andrea", "Camila", "Natalia",
            "Mia", "Martina", "Lucia", "Samantha", "Maria", "Nicole", "Alejandra",
            "Paula", "Emily", "Fernanda", "Regina", "Santiago", "Sebastian", "Diego", "Nicolas",
            "Samuel", "Alejandro", "Daniel", "Mateo", "Angel", "Matias", "Gabriel",
            "Tomas", "David", "Emiliano", "Andres", "Joaquin", "Carlos", "Alexander", "Adrian",
            "Lucas", "Benjamin", "Leonardo", "Rodrigo", "Felipe", "Francisco", "Pablo", "Martin", "Fernando", "Isaac",
            "Manuel", "Juan Pablo", "Emmanuel", "Emilio", "Vicente", "Eduardo", "Juan", "Javier", "Luis", "Lucas", "Mateo", "Walter", "Tyler", "Obdulio"};
        //person name , person age,city ID and person ID

        Campos c1 = new Campos("PersonName", "String", 12, false);
        Campos c2 = new Campos("PersonAge", "Int", 8, false);
        Campos c3 = new Campos("CityId", "Int", 8, false);
        Campos c4 = new Campos("personId", "Int", 8, true);
        DefaultComboBoxModel modelo3 = (DefaultComboBoxModel) Cb_Indexar.getModel();
        Cb_Indexar.setModel(modelo3);
        modelo3.addElement(c1);
        modelo3.addElement(c2);
        modelo3.addElement(c3);
        modelo3.addElement(c4);
        ListaL.add(8);
        ListaL.add(12);
        ListaL.add(8);
        ListaL.add(8);

        ArrayList<Integer> PersonalIDval = new ArrayList();
        ArrayList<Integer> CityIDval = new ArrayList();
        PersonalIDval.add(0);
        CityIDval.add(0);
        ArrayList<Campos> lc = new ArrayList();

        ArrayList<String> ls = new ArrayList();
        Registros re1 = new Registros();
        lc.add(c4);
        lc.add(c1);
        lc.add(c2);
        lc.add(c3);

        String s1;
        String s2;
        String s3;
        String s4;
        re1.setListaCampo(lc);
        Listac = re1.getListaCampo();
        Arbolb t = new Arbolb(6);
        ap.setBtree(t);
        namebin = "Prueba1";
        writeB(namebin, t);
        try {
            ap.crearArchivo("Prueba1", "");
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        ap.setName("Prueba1.txt");
        nameArchivo = "Prueba1.txt";
        try {
            ap.escribirArchivo(writeMD());
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        re1.setListaString(ls);

        String pal = "";
        //System.out.println("SIZE: "+re1.getListaCampo().size());

        String fin5 = "";
        String fin6 = "";
        String fin7 = "";
        String fin8 = "";
        String fin9 = "";
        String fin10 = "";
        int w = 0;
        int cont = 0;
        int cont2 = 0;
        int con = writeMD().length();
        int e = writeMD().length();
        for (int i = 0; i < 1000; i++) {
            Random r1 = new Random();
            Random r2 = new Random();
            Random r3 = new Random();
            Random r4 = new Random();

            int x1 = 0;
            x1 += r1.nextInt(48);//nombres
            int x2 = 0;
            x2 += r2.nextInt(80);//edad
            int x3 = -1;
            int x4 = 0;

            x3 = r3.nextInt(80000000);//person ID 
            if (!PersonalIDval.contains(x3)) {
                PersonalIDval.add(x3);
                //System.out.println("ID: "+x3);
            }

            x4 = r4.nextInt(90000000);//City ID
            //System.out.println("X1: "+x1);
            s3 = x3 + "";
            s1 = names[x1];//agarro nombres
            s4 = x4 + "";
            //lc.add(c4);
            ls.add(s3);

            //agregado primer campo
            s2 = x2 + "";
            //lc.add(c1);
            ls.add(s1);

            //agregando segundo campo
            //lc.add(c2);
            ls.add(s2);

            //agregado tercer campo
            //lc.add(c3);
            ls.add(s4);
            if (cont <= 1000) {
                LLave l1 = new LLave();
                fin5 = re1.getListaString().get(cont);
                int k = 0;
                while (w <= 4) {

                    if (w == 4) {
                        //luis,m232,323,32
                        //weawe.34343.4343
                        //System.out.println("OFFSET: "+fin9.length());

                        RandomAccessFile raf;
                        try {

                            raf = new RandomAccessFile(ap.getName(), "rw");
                            long md = writeMD().length();
                            ap.escribirArchivo(writeMD());
                            raf.seek(writeMD().length());

                            raf.writeChars(fin7);
                            raf.writeChars("\n");
                            raf.close();

                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        if (prim1 == true) {
                            System.out.println("PRIMERA: " + writeMD().length());

                            l1.setOffset(writeMD().length());

                            t.insert(l1);
                            writeB(namebin, ap.getBtree());
                            prim1 = false;
                            fin9 = "";

                        } else {

                            LLave ll1 = t.buscarLlave(t.getRaiz(), k);
                            if (ll1 == null) {
                                //System.out.println("PALABRA: "+fin10);

                                con += 82;
                                System.out.println("OFFSET: " + con);

                                //System.out.println("OFFSET: "+e);
                                l1.setOffset(con);
                                fin10 = "";

                                t.insert(l1);
                                writeB(namebin, ap.getBtree());
                                fin9 = "";

                            } else {
                                cont2++;

                            }
                        }
                        fin7 += "\n";

                    } else {

                        if (w == 0) {

                            fin5 = re1.getListaString().get(cont);
                            //System.out.println("LLAVE A AGREGAR: "+fin5);
                            k = Integer.parseInt(fin5);
                            l1.setLlave(k);

                        }

                        fin5 = re1.getListaString().get(cont);
                        int l = re1.getListaCampo().get(w).getSize();
                        fin6 = fixSpace(fin5, l);
                        fin7 += fin6 + "|";
                        fin8 += fin7;
                        fin9 += fin6 + "|";
                        fin10 += fin6 + "|";
                        cont++;
                    }

                    w++;
                }
                w = 0;
            }

        }

        ap.setBtree(t);
        int size;

        System.out.println("VECES REPETIDAS: " + cont2);
        //System.out.println("ARBOL: ");
        System.out.println("AVAIL OFF: " + donde2);

        //"CAMPOS: 4 "+"\n"+
        //+"\n"+"AVAILIST HEAD: NULL "+"\n";

    }//GEN-LAST:event_jButton11ActionPerformed

    private void B_Campo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Campo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_Campo1ActionPerformed

    private void B_Registro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Registro1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_Registro1ActionPerformed

    private void B_Index1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Index1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_Index1ActionPerformed

    private void B_Exportar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Exportar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_Exportar1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void B_Crear_IndiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_Crear_IndiceActionPerformed
        Indexar.pack();
        Indexar.setLocationRelativeTo(this);
        Indexar.setVisible(true);

    }//GEN-LAST:event_B_Crear_IndiceActionPerformed

    private void B_ReindexarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ReindexarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_ReindexarActionPerformed

    private void Cb_IndexarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cb_IndexarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Cb_IndexarActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        Campos c = (Campos) Cb_Indexar.getSelectedItem();
        if (ap.getName().equals("Prueba1.txt")) {
            if (c.getNombre().equals("PersonName") || c.getNombre().equals("PersonAge")) {
                JOptionPane.showMessageDialog(this, c.getNombre() + " No es un campo valido.");
            } else {
                if (c.isIsKey()) {
                    JOptionPane.showMessageDialog(this, c.getNombre() + " ya es una llave primaria");
                } else {
                    Arbolb b = new Arbolb(6);
                    ArrayList<Object> offsets = new ArrayList();
                    Arbolb Primario = ap.getBtree();
                    Primario.getRegistersOffsets(offsets, Primario.getRaiz(), 0);
                    RandomAccessFile raf;

                }
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                f.setExtendedState(MAXIMIZED_BOTH);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_AbrirArchivo;
    private javax.swing.JButton B_AbrirRegistro;
    private javax.swing.JButton B_BorrarCampo;
    private javax.swing.JButton B_Campo;
    private javax.swing.JButton B_Campo1;
    private javax.swing.JButton B_CerrarRegistro;
    private javax.swing.JButton B_CrearCampo;
    private javax.swing.JButton B_Crear_Indice;
    private javax.swing.JButton B_Eliminar;
    private javax.swing.JButton B_Exportar;
    private javax.swing.JButton B_Exportar1;
    private javax.swing.JButton B_GuardarArchivo;
    private javax.swing.JButton B_Index;
    private javax.swing.JButton B_Index1;
    private javax.swing.JButton B_ListarCampo;
    private javax.swing.JButton B_ModificarCampo;
    private javax.swing.JButton B_NuevoArchivo;
    private javax.swing.JButton B_NuevoRegistro1;
    private javax.swing.JButton B_Registro;
    private javax.swing.JButton B_Registro1;
    private javax.swing.JButton B_Reindexar;
    private javax.swing.JComboBox<String> Cb_Indexar;
    private javax.swing.JComboBox<String> Cb_editarCampo;
    private javax.swing.JButton GuardarCampos;
    private javax.swing.JDialog Indexar;
    private javax.swing.JRadioButton No1;
    private javax.swing.JTextField Nombre_Campo;
    private javax.swing.JTextField Nombre_Campo1;
    private javax.swing.JRadioButton RB1;
    private javax.swing.JRadioButton RB2;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel Titulo1;
    private javax.swing.JLabel Titulo2;
    private javax.swing.JLabel Titulo3;
    private javax.swing.JLabel background;
    private javax.swing.JLabel background1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_TD;
    private javax.swing.JComboBox<String> cb_TD1;
    private javax.swing.JComboBox<String> cb_borrarc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDialog jDialog_Archivo;
    private javax.swing.JDialog jDialog_BorrarCampo;
    private javax.swing.JDialog jDialog_Campos;
    private javax.swing.JDialog jDialog_CrearCampos;
    private javax.swing.JDialog jDialog_CrearRegistro;
    private javax.swing.JDialog jDialog_EditarCampos;
    private javax.swing.JDialog jDialog_Indexar;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_CrearCampo;
    private javax.swing.JLabel jLabel_CrearCampo1;
    private javax.swing.JLabel jLabel_CrearCampo10;
    private javax.swing.JLabel jLabel_CrearCampo2;
    private javax.swing.JLabel jLabel_CrearCampo3;
    private javax.swing.JLabel jLabel_CrearCampo4;
    private javax.swing.JLabel jLabel_CrearCampo5;
    private javax.swing.JLabel jLabel_CrearCampo6;
    private javax.swing.JLabel jLabel_CrearCampo7;
    private javax.swing.JLabel jLabel_CrearCampo8;
    private javax.swing.JLabel jLabel_CrearCampo9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner longS;
    // End of variables declaration//GEN-END:variables
    ArrayList<Arbolb> listaArbol = new ArrayList();
    ArrayList<Archivo> listaA = new ArrayList();
    ArrayList<String> listaK1 = new ArrayList();
    ArrayList<Integer> ListaL = new ArrayList();
    ArrayList<Campos> Listac = new ArrayList();
    ArrayList<String> ListaS = new ArrayList();
    ArrayList<Integer> ListaKeyPos = new ArrayList();//posici√≥n de las llaves.
    Archivo ap = new Archivo();
    String nameArchivo;

    public void eliminarTabla() {
        //---------------------------------------------------//
        //      Esto hace que no se repitan cosas en la tabla
        //---------------------------------------------------//
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        int a = jTable1.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }

    }

    public void writeB(String name, Arbolb tree) {
        File file = new File(name + ".bin");

        FileOutputStream fw = null;
        ObjectOutputStream bw = null;
        try {
            fw = new FileOutputStream(file);
            bw = new ObjectOutputStream(fw);
            // for (persona t : listaPersonas) {
            bw.writeObject(tree);
            //}
            bw.flush();
        } catch (Exception ex) {
        } finally {
            try {
                bw.close();
                fw.close();
            } catch (Exception ex) {
            }
        }

    }

    public void cargarArbol(String nombre) throws FileNotFoundException, IOException, ClassNotFoundException {

        FileInputStream fstream = new FileInputStream(nombre + ".bin");
        try {
            ObjectInputStream ostream = new ObjectInputStream(fstream);
            while (true) {
                Arbolb obj;
                try {
                    obj = (Arbolb) ostream.readObject();
                    ap.setBtree(obj);

                } catch (EOFException e) {
                    break;
                }
                // do something with obj
            }
        } finally {
            fstream.close();
        }
    }

    //variables globales
    int donde3;
    String namebin;
    boolean esta = false;
    int donde2;
    int donde;
    int cc2, cc3;
    int mdsize;
    //Arbolb tree=new Arbolb(6);
    //booleans de validaciones
    boolean primA = true;
    boolean prim1 = true;
    boolean primB = true;
    boolean primeraVez = true;

    //Arbolb tree=new Arbolb(6);
    //booleans de validaciones
    boolean boolArchivo = false;
    boolean boolCampos = false;
    boolean boolRegistro = false;
    boolean boolGuardado = false;
    boolean boolGuardarRegistro = false;
    boolean boolEntroRegistro = true;
    boolean pv = true;

}
