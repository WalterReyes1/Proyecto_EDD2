/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_edd2;

import static java.awt.Frame.MAXIMIZED_BOTH;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    static Main f = new Main();

    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_Campos = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        GuardarCampos = new javax.swing.JButton();
        B_CrearCampo = new javax.swing.JButton();
        B_ListarCampo = new javax.swing.JButton();
        B_ModificarCampo = new javax.swing.JButton();
        B_BorrarCampo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jDialog_CrearCampos = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel_CrearCampo = new javax.swing.JLabel();
        jLabel_CrearCampo1 = new javax.swing.JLabel();
        Nombre_Campo = new javax.swing.JTextField();
        jLabel_CrearCampo2 = new javax.swing.JLabel();
        cb_TD = new javax.swing.JComboBox<>();
        jLabel_CrearCampo3 = new javax.swing.JLabel();
        jLabel_CrearCampo4 = new javax.swing.JLabel();
        RB1 = new javax.swing.JRadioButton();
        RB2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        longS = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog_EditarCampos = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel_CrearCampo5 = new javax.swing.JLabel();
        jLabel_CrearCampo6 = new javax.swing.JLabel();
        Nombre_Campo1 = new javax.swing.JTextField();
        jLabel_CrearCampo7 = new javax.swing.JLabel();
        cb_TD1 = new javax.swing.JComboBox<>();
        jLabel_CrearCampo8 = new javax.swing.JLabel();
        jLabel_CrearCampo9 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        No1 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jLabel_CrearCampo10 = new javax.swing.JLabel();
        Cb_editarCampo = new javax.swing.JComboBox<>();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jDialog_BorrarCampo = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        cb_borrarc = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        B_Eliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jDialog_Archivo = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        B_NuevoArchivo = new javax.swing.JButton();
        B_AbrirArchivo = new javax.swing.JButton();
        B_GuardarArchivo = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jDialog_CrearRegistro = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        B_NuevoRegistro1 = new javax.swing.JButton();
        B_AbrirRegistro = new javax.swing.JButton();
        B_GuardarRegistro = new javax.swing.JButton();
        B_CerrarRegistro = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Titulo = new javax.swing.JLabel();
        Titulo1 = new javax.swing.JLabel();
        B_Campo = new javax.swing.JButton();
        B_Registro = new javax.swing.JButton();
        B_Index = new javax.swing.JButton();
        B_Exportar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(255, 153, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Tipo", "Tama√±o", "Es Llave"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 46, 452, 260));

        GuardarCampos.setText("Guardar Campos");
        GuardarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCamposActionPerformed(evt);
            }
        });
        jPanel2.add(GuardarCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, 150, 50));

        B_CrearCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_CrearCampo.setText("Crear Campo");
        B_CrearCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CrearCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_CrearCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 46, 126, -1));

        B_ListarCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_ListarCampo.setText("Listar Campos");
        B_ListarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ListarCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_ListarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 126, -1));

        B_ModificarCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_ModificarCampo.setText("Modificar Campo");
        B_ModificarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ModificarCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_ModificarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 120, -1));

        B_BorrarCampo.setBackground(new java.awt.Color(255, 255, 255));
        B_BorrarCampo.setText("Borrar Campo");
        B_BorrarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_BorrarCampoActionPerformed(evt);
            }
        });
        jPanel2.add(B_BorrarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 126, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 400));

        javax.swing.GroupLayout jDialog_CamposLayout = new javax.swing.GroupLayout(jDialog_Campos.getContentPane());
        jDialog_Campos.getContentPane().setLayout(jDialog_CamposLayout);
        jDialog_CamposLayout.setHorizontalGroup(
            jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_CamposLayout.setVerticalGroup(
            jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 377, Short.MAX_VALUE)
            .addGroup(jDialog_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialog_CrearCampos.setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_CrearCampo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel_CrearCampo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo.setText("Crear Campo");
        jPanel3.add(jLabel_CrearCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel_CrearCampo1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo1.setText("Nombre del Campo");
        jPanel3.add(jLabel_CrearCampo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 73, -1, -1));

        Nombre_Campo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nombre_Campo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nombre_CampoActionPerformed(evt);
            }
        });
        jPanel3.add(Nombre_Campo, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 73, 260, -1));

        jLabel_CrearCampo2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo2.setText("Tipo de Dato");
        jPanel3.add(jLabel_CrearCampo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 110, -1, -1));

        cb_TD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Char", "Int" }));
        cb_TD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_TDItemStateChanged(evt);
            }
        });
        jPanel3.add(cb_TD, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 109, 120, -1));

        jLabel_CrearCampo3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo3.setText("Numero de caracteres m√°ximo");
        jPanel3.add(jLabel_CrearCampo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 154, -1, -1));

        jLabel_CrearCampo4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo4.setText("¬øEs llave primaria? ");
        jPanel3.add(jLabel_CrearCampo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 199, -1, -1));

        RB1.setBackground(new java.awt.Color(204, 0, 204));
        buttonGroup1.add(RB1);
        RB1.setForeground(new java.awt.Color(255, 255, 255));
        RB1.setText("S√≠");
        jPanel3.add(RB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 197, -1, -1));

        RB2.setBackground(new java.awt.Color(204, 0, 204));
        buttonGroup1.add(RB2);
        RB2.setForeground(new java.awt.Color(255, 255, 255));
        RB2.setText("No");
        jPanel3.add(RB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 197, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Crear Campo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, -1, -1));

        longS.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel3.add(longS, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 153, 54, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 370));

        javax.swing.GroupLayout jDialog_CrearCamposLayout = new javax.swing.GroupLayout(jDialog_CrearCampos.getContentPane());
        jDialog_CrearCampos.getContentPane().setLayout(jDialog_CrearCamposLayout);
        jDialog_CrearCamposLayout.setHorizontalGroup(
            jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
            .addGroup(jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_CrearCamposLayout.setVerticalGroup(
            jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 349, Short.MAX_VALUE)
            .addGroup(jDialog_CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 102, 51));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_CrearCampo5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo5.setText("Editar campo");
        jPanel4.add(jLabel_CrearCampo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 33, -1, -1));

        jLabel_CrearCampo6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo6.setText("Nombre del Campo");
        jPanel4.add(jLabel_CrearCampo6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, -1, -1));

        Nombre_Campo1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nombre_Campo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nombre_Campo1ActionPerformed(evt);
            }
        });
        jPanel4.add(Nombre_Campo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 73, 120, -1));

        jLabel_CrearCampo7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo7.setText("Tipo de Dato");
        jPanel4.add(jLabel_CrearCampo7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 107, -1, -1));

        cb_TD1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Char", "Int" }));
        jPanel4.add(cb_TD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 110, 87, -1));

        jLabel_CrearCampo8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo8.setText("Numero de caracteres m√°ximo");
        jPanel4.add(jLabel_CrearCampo8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 148, -1, -1));

        jLabel_CrearCampo9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo9.setText("¬øEs llave primaria? ");
        jPanel4.add(jLabel_CrearCampo9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 189, -1, -1));

        jRadioButton2.setBackground(new java.awt.Color(51, 0, 51));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("S√≠");
        jPanel4.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 191, -1, -1));

        No1.setBackground(new java.awt.Color(51, 0, 51));
        buttonGroup1.add(No1);
        No1.setForeground(new java.awt.Color(255, 255, 255));
        No1.setText("No");
        jPanel4.add(No1, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 191, -1, -1));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Modificar Campo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 286, -1, -1));

        jLabel_CrearCampo10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel_CrearCampo10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CrearCampo10.setText("Campo a Editar");
        jPanel4.add(jLabel_CrearCampo10, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 53, -1, -1));

        Cb_editarCampo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Cb_editarCampoItemStateChanged(evt);
            }
        });
        jPanel4.add(Cb_editarCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 81, 98, -1));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel4.add(jSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 151, 54, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 1, 560, 350));

        javax.swing.GroupLayout jDialog_EditarCamposLayout = new javax.swing.GroupLayout(jDialog_EditarCampos.getContentPane());
        jDialog_EditarCampos.getContentPane().setLayout(jDialog_EditarCamposLayout);
        jDialog_EditarCamposLayout.setHorizontalGroup(
            jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 559, Short.MAX_VALUE)
            .addGroup(jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_EditarCamposLayout.setVerticalGroup(
            jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
            .addGroup(jDialog_EditarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 102, 51));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.add(cb_borrarc, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 143, 36));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Campo a Eliminar");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        B_Eliminar.setBackground(new java.awt.Color(255, 255, 255));
        B_Eliminar.setText("Eliminar");
        B_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_EliminarActionPerformed(evt);
            }
        });
        jPanel5.add(B_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 143, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-180, 0, 660, 290));

        javax.swing.GroupLayout jDialog_BorrarCampoLayout = new javax.swing.GroupLayout(jDialog_BorrarCampo.getContentPane());
        jDialog_BorrarCampo.getContentPane().setLayout(jDialog_BorrarCampoLayout);
        jDialog_BorrarCampoLayout.setHorizontalGroup(
            jDialog_BorrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_BorrarCampoLayout.setVerticalGroup(
            jDialog_BorrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 102, 51));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_NuevoArchivo.setBackground(new java.awt.Color(255, 255, 255));
        B_NuevoArchivo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_NuevoArchivo.setText("Nuevo Archivo");
        B_NuevoArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_NuevoArchivoActionPerformed(evt);
            }
        });
        jPanel6.add(B_NuevoArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 200, 35));

        B_AbrirArchivo.setBackground(new java.awt.Color(255, 255, 255));
        B_AbrirArchivo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_AbrirArchivo.setText("Abrir archivo");
        B_AbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_AbrirArchivoActionPerformed(evt);
            }
        });
        jPanel6.add(B_AbrirArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 200, 35));

        B_GuardarArchivo.setBackground(new java.awt.Color(255, 255, 255));
        B_GuardarArchivo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_GuardarArchivo.setText("Cerrar y Guardar Archivo");
        B_GuardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_GuardarArchivoActionPerformed(evt);
            }
        });
        jPanel6.add(B_GuardarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 250, 50));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton5.setText("Archivos de Prueba");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jPanel6.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 200, 40));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel6.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-310, 0, 660, 400));

        javax.swing.GroupLayout jDialog_ArchivoLayout = new javax.swing.GroupLayout(jDialog_Archivo.getContentPane());
        jDialog_Archivo.getContentPane().setLayout(jDialog_ArchivoLayout);
        jDialog_ArchivoLayout.setHorizontalGroup(
            jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
            .addGroup(jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_ArchivoLayout.setVerticalGroup(
            jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
            .addGroup(jDialog_ArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jFormattedTextField1.setText("jFormattedTextField1");

        jPanel8.setBackground(new java.awt.Color(255, 102, 51));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_NuevoRegistro1.setBackground(new java.awt.Color(255, 255, 255));
        B_NuevoRegistro1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_NuevoRegistro1.setText("Nuevo Registro");
        B_NuevoRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_NuevoRegistro1ActionPerformed(evt);
            }
        });
        jPanel8.add(B_NuevoRegistro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 176, 35));

        B_AbrirRegistro.setBackground(new java.awt.Color(255, 255, 255));
        B_AbrirRegistro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_AbrirRegistro.setText("Abrir Registro");
        B_AbrirRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_AbrirRegistroActionPerformed(evt);
            }
        });
        jPanel8.add(B_AbrirRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 176, 35));

        B_GuardarRegistro.setBackground(new java.awt.Color(255, 255, 255));
        B_GuardarRegistro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_GuardarRegistro.setText("Guardar Registro");
        B_GuardarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_GuardarRegistroActionPerformed(evt);
            }
        });
        jPanel8.add(B_GuardarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 176, 35));

        B_CerrarRegistro.setBackground(new java.awt.Color(255, 255, 255));
        B_CerrarRegistro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_CerrarRegistro.setText("Cerrar Registro");
        B_CerrarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CerrarRegistroActionPerformed(evt);
            }
        });
        jPanel8.add(B_CerrarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 176, 35));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-310, 0, 660, 400));

        javax.swing.GroupLayout jDialog_CrearRegistroLayout = new javax.swing.GroupLayout(jDialog_CrearRegistro.getContentPane());
        jDialog_CrearRegistro.getContentPane().setLayout(jDialog_CrearRegistroLayout);
        jDialog_CrearRegistroLayout.setHorizontalGroup(
            jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_CrearRegistroLayout.setVerticalGroup(
            jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jDialog_CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(300, 700));

        jPanel1.setBackground(new java.awt.Color(255, 102, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setText("File Manager");
        jPanel1.add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, -1));

        Titulo1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Titulo1.setForeground(new java.awt.Color(255, 255, 255));
        Titulo1.setText("Standard");
        jPanel1.add(Titulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        B_Campo.setBackground(new java.awt.Color(255, 255, 255));
        B_Campo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Campo.setText("Campos");
        B_Campo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CampoActionPerformed(evt);
            }
        });
        jPanel1.add(B_Campo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 160, 50));

        B_Registro.setBackground(new java.awt.Color(255, 255, 255));
        B_Registro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Registro.setText("Archivo");
        B_Registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_RegistroActionPerformed(evt);
            }
        });
        jPanel1.add(B_Registro, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 160, 50));

        B_Index.setBackground(new java.awt.Color(255, 255, 255));
        B_Index.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Index.setText("Index");
        B_Index.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_IndexActionPerformed(evt);
            }
        });
        jPanel1.add(B_Index, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 160, 50));

        B_Exportar.setBackground(new java.awt.Color(255, 255, 255));
        B_Exportar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        B_Exportar.setText("Exportar");
        B_Exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ExportarActionPerformed(evt);
            }
        });
        jPanel1.add(B_Exportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 160, 50));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("Registro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 160, 50));

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/background2.jpg"))); // NOI18N
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(-280, 0, 700, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_ListarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ListarCampoActionPerformed

    }//GEN-LAST:event_B_ListarCampoActionPerformed

    private void B_ModificarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ModificarCampoActionPerformed
        if (boolCampos) {
            jDialog_EditarCampos.pack();
            jDialog_EditarCampos.setLocationRelativeTo(this);
            jDialog_EditarCampos.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe crear al menos un campo para modificar");
        }
    }//GEN-LAST:event_B_ModificarCampoActionPerformed

    private void B_BorrarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_BorrarCampoActionPerformed
        if (boolCampos) {
            jDialog_BorrarCampo.pack();
            jDialog_BorrarCampo.setLocationRelativeTo(this);
            jDialog_BorrarCampo.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe crear al menos un campo para eliminar");
        }

    }//GEN-LAST:event_B_BorrarCampoActionPerformed

    private void Nombre_CampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nombre_CampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nombre_CampoActionPerformed

    private void B_CrearCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CrearCampoActionPerformed
        jDialog_CrearCampos.pack();
        jDialog_CrearCampos.setLocationRelativeTo(this);
        jDialog_CrearCampos.setVisible(true);
    }//GEN-LAST:event_B_CrearCampoActionPerformed

    private void Nombre_Campo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nombre_Campo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nombre_Campo1ActionPerformed

    private void B_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_EliminarActionPerformed
        Registros r = new Registros();
        Campos c = new Campos();
        r.setListaCampo(Listac);
        c = (Campos) cb_borrarc.getSelectedItem();
        r.getListaCampo().remove(c);
        cb_borrarc.removeItem(c);
        //actualizar table
        if (boolCampos) {
            eliminarTabla();
            DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
            for (Campos p : Listac) {

                Object[] newRow = {
                    p.getNombre(),
                    p.getData_type(),
                    p.getSize(),
                    p.isIsKey(),};
                modelo2.addRow(newRow);
            }

        } else {

        }
    }//GEN-LAST:event_B_EliminarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Campos c = new Campos();
        c = (Campos) Cb_editarCampo.getSelectedItem();
        boolean llave1 = false;
        for (int i = 0; i < Listac.size(); i++) {
            if (Listac.get(i).isIsKey() && jRadioButton2.isSelected()) {
                llave1 = true;
            }

            if (Listac.get(i).isIsKey() && No1.isSelected()) {
                llave1 = false;
            }
        }
        if (llave1) {
            JOptionPane.showMessageDialog(null, "Ya existe una llave primaria");
        }
        while (llave1 == false) {
            int size = (Integer) longS.getValue();
            try {
                String name = Nombre_Campo1.getText();
                String tipo = "";
                if (cb_TD1.getSelectedIndex() == 0) {
                    tipo = "String";
                }
                if (cb_TD1.getSelectedIndex() == 1) {
                    tipo = "Char";
                    size = 1;
                }
                if (cb_TD1.getSelectedIndex() == 2) {
                    tipo = "int";
                    size = 32;
                }

                boolean llave;
                if (jRadioButton2.isSelected()) {
                    llave = true;
                } else {
                    llave = false;
                }
                c.setNombre(name);
                c.setData_type(tipo);
                c.setSize(size);
                c.setIsKey(llave);

                JOptionPane.showMessageDialog(this, "editado Excitosamente");
                System.out.println(c.toString());

                boolCampos = true;

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al editar");
            }
            //vaciar y cerrar
            Nombre_Campo.setText("");
            cb_TD.setSelectedIndex(0);
            longS.setValue(1);
            jDialog_CrearCampos.setVisible(false);

            //actualizar table
            if (boolCampos) {
                eliminarTabla();
                DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
                for (Campos p : Listac) {

                    Object[] newRow = {
                        p.getNombre(),
                        p.getData_type(),
                        p.getSize(),
                        p.isIsKey(),};
                    modelo2.addRow(newRow);
                }

            } else {

            }
            llave1 = true;
        }
        llave1 = false;

    }//GEN-LAST:event_jButton2ActionPerformed

    private void B_ExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ExportarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_ExportarActionPerformed

    private void B_IndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_IndexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_IndexActionPerformed

    private void B_RegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_RegistroActionPerformed
        jDialog_Archivo.pack();
        jDialog_Archivo.setLocationRelativeTo(this);
        jDialog_Archivo.setVisible(true);
    }//GEN-LAST:event_B_RegistroActionPerformed

    private void B_CampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CampoActionPerformed

        if (boolArchivo && boolEntroRegistro) {
            jDialog_Campos.pack();
            jDialog_Campos.setLocationRelativeTo(this);
            jDialog_Campos.setVisible(true);
        } else if (boolArchivo == false) {
            JOptionPane.showMessageDialog(this, "Debe crear un archivo antes de ingresar a la opcion de campos");
        } else {
            JOptionPane.showMessageDialog(this, "Ya no es posible ver campos en este archivo");
        }

        if (boolCampos) {
            eliminarTabla();
            DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
            for (Campos p : Listac) {

                Object[] newRow = {
                    p.getNombre(),
                    p.getData_type(),
                    p.getSize(),
                    p.isIsKey(),};
                modelo2.addRow(newRow);
            }

        } else {

        }
    }//GEN-LAST:event_B_CampoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean llave1 = false;
        for (int i = 0; i < Listac.size(); i++) {
            if (Listac.get(i).isIsKey() && RB1.isSelected()) {
                llave1 = true;
            }

            if (Listac.get(i).isIsKey() && RB2.isSelected()) {
                llave1 = false;
            }
        }
        if (llave1) {
            JOptionPane.showMessageDialog(null, "Ya existe una llave primaria");
        }
        while (llave1 == false) {
            int size = (Integer) longS.getValue();
            try {
                String name = Nombre_Campo.getText();
                String tipo = "";
                if (cb_TD.getSelectedIndex() == 0) {
                    tipo = "String";
                }
                if (cb_TD.getSelectedIndex() == 1) {
                    tipo = "Char";
                    size = 1;
                }
                if (cb_TD.getSelectedIndex() == 2) {
                    tipo = "Int";
                    size = 4;
                }

                boolean llave;
                if (RB1.isSelected()) {
                    llave = true;
                } else {
                    llave = false;
                }
                if(tipo.equals("Int")){
                    size=4;
                    ListaL.add(size);
                }
                if(tipo.equals("Char")){
                    size=1;
                    ListaL.add(size);
                }
                if(tipo.equals("String")){
                    ListaL.add(size);
                }
                
                Campos c1 = new Campos(name, tipo, size, llave);
                Listac.add(c1);
                boolean key = false;

                for (int i = 0; i < Listac.size(); i++) {
                    if (Listac.get(i).isIsKey() == true) {
                        key = true;

                    }

                }
                String[] arreglo = {"S√≠", "No"};
                int opcion = JOptionPane.showOptionDialog(null, "Creado exitosamente. Desea crear otro campo?", "Campos", 0, JOptionPane.QUESTION_MESSAGE, null, arreglo, "");
                if (opcion == 0) {

                } else {
                    if (!key) {
                        JOptionPane.showMessageDialog(null, "Necesitamos una llave primaria m√≠nimo.Porfavor crear una");
                        RB2.setVisible(false);
                        RB1.setSelected(true);
                    } else {
                        jDialog_CrearCampos.setVisible(false);
                        RB2.setVisible(true);
                        RB1.setSelected(false);
                    }

                }
                System.out.println(c1.toString());

                DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_borrarc.getModel();

                cb_borrarc.setModel(modelo);

                modelo.addElement(c1);

                DefaultComboBoxModel modelo2 = (DefaultComboBoxModel) Cb_editarCampo.getModel();
                Cb_editarCampo.setModel(modelo2);
                modelo2.addElement(c1);

                boolCampos = true;

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al crear");
            }
            //vaciar y cerrar
            Nombre_Campo.setText("");
            cb_TD.setSelectedIndex(0);
            longS.setValue(1);
            for (int i = 0; i < Listac.size(); i++) {
                if (Listac.get(i).isIsKey() == true) {

                    ListaKeyPos.add(i);
                }

            }
            for (int i = 0; i < ListaKeyPos.size(); i++) {
                System.out.println("La llave se encuentra en la pos: "+ListaKeyPos.get(i));
            }
            //actualizar table
            if (boolCampos) {
                eliminarTabla();
                DefaultTableModel modelo2 = (DefaultTableModel) jTable1.getModel();
                for (Campos p : Listac) {

                    Object[] newRow = {
                        p.getNombre(),
                        p.getData_type(),
                        p.getSize(),
                        p.isIsKey(),};
                    modelo2.addRow(newRow);
                }

            } else {

            }
            llave1 = true;
        }
        llave1 = false;


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (boolArchivo == true && boolCampos == true) {
            int resp = JOptionPane.showConfirmDialog(this, "¬øEsta seguro que ya no quiere agregar/modificar/eliminar algun campo?");
            if (resp == 0) {
                jDialog_CrearRegistro.pack();
                jDialog_CrearRegistro.setLocationRelativeTo(this);
                jDialog_CrearRegistro.setVisible(true);
                boolEntroRegistro = false;
            } else {
                //no puede ingresar al menu de registro
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe crear un archivo y por lo menos un campo para ingresar a la opcion de registro");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void B_NuevoRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_NuevoRegistro1ActionPerformed
        Registros r = new Registros();
        r.setListaCampo(Listac);
        boolean valid = false;
        String pal = "";
        int value = 0;
        boolean valid2 = false;
        for (int i = 0; i < r.getListaCampo().size(); i++) {

            if (r.getListaCampo().get(i).getData_type().equals("String") || r.getListaCampo().get(i).getData_type().equals("Char")) {

                do {
                    if (!valid) {

                    } else {
                        JOptionPane.showMessageDialog(null, "Longitud invalida");
                    }
                    pal = JOptionPane.showInputDialog(r.getListaCampo().get(i).getNombre());
                    valid = true;
                } while (pal.length() > r.getListaCampo().get(i).getSize());
                ListaS.add(pal);

            } else {
                do {
                    try {
                        value = Integer.parseInt(JOptionPane.showInputDialog(r.getListaCampo().get(i).getNombre()));
                        valid2 = false;
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Entrada invalida");
                        valid2 = true;
                    }
                } while (valid2);
                ListaS.add(value + "");
            }
            valid = false;

        }
        //System.out.println("Este es pal: " + pal);
        r.setListaString(ListaS);
        JOptionPane.showMessageDialog(this, "CREADO");
        boolRegistro = true;

    }//GEN-LAST:event_B_NuevoRegistro1ActionPerformed

    private void B_NuevoArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_NuevoArchivoActionPerformed
        String camino = "";

        File fichero = null;
        FileReader fr = null;
        BufferedReader br = null;

        try {
            JFileChooser jfc = new JFileChooser("./");

            int seleccion = jfc.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                camino = jfc.getSelectedFile().getPath();
                //ap.setName(jfc.getSelectedFile().getName()+".txt");
                //nameArchivo = "";
            }

        } catch (Exception e) {

        }

        try {

            //JOptionPane.showInputDialog(this, "NOMBRE DE ARCHIVO A CREAR");
            // nameArchivo += ".txt";
            ap.crearArchivo(camino, nameArchivo);
            nameArchivo = camino + ".txt";
            ap.setName(nameArchivo);

            System.out.println("NAME " + ap.getName());
            boolArchivo = true;

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo crear Archivo");
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);

        }
        jDialog_Archivo.setVisible(false);
        boolGuardado = false;

    }//GEN-LAST:event_B_NuevoArchivoActionPerformed

    private void B_GuardarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_GuardarRegistroActionPerformed
        // TODO add your handling code here:
        System.out.println(ap.getName());
        if (boolRegistro) {
            //ya hay registros creados
            int cont1 = 1;
            Registros r = new Registros();
            r.setListaCampo(Listac);
            r.setListaString(ListaS);
            String pal = "";
            String cc1 = "";
            System.out.println(r.getListaCampo().size());
            System.out.println(r.getListaString().size());
            //al momento de crear un campo primera vez obligar a crear llave
            //si quiere volver a crear lo dejas, pero ya tenemos validacion  de solo 1 llave
            //no lo saques de crear campo hasta que diga que no
            //si el j option dice que no quiere seguir creando  ocupo un boolean que nos diga si ya hay una llave
            //hace un j option que diga quiere seguir creadno
            //nombre,ultimo,idllave
            //luis,flores,12
            //ocupo saber en que posicion de la lista de campos esta la llave
            //para poder saebr la posicion lista string
            try {

                for (int i = 0; i < r.getListaString().size(); i++) {

                    System.out.println(r.getListaString().size());
                    String word=r.getListaString().get(i);
                    String esp="";
                    int falta=ListaL.get(i)-word.length();
                    System.out.println("LA DIFERENCIA ES: "+falta);
                    for (int j = 0; j < falta; j++) {
                        esp+=" ";
                    }
                    pal +=word+esp+"|";//ESTA LINEA GUARDA LOS STRING DE J OPTION

                    if (cont1 == r.getListaCampo().size()) {
                        pal += "\n";
                        cont1 = 0;
                    }
                    cont1++;
                }
                for (int i = 0; i < Listac.size(); i++) {
                    Campos c1 = Listac.get(i);
                    String size1 = c1.getSize() + "";
                    cc1 += c1.getNombre() + ";" + c1.getData_type() + ";" + size1 + ";" + c1.isIsKey() + ";" + "\n";

                }
                //"CAMPOS: 4 "+"\n"+
                //+"\n"+"AVAILIST HEAD: NULL "+"\n";
                String pal2 = "";
                pal2 += Listac.size() + "\n" + cc1 + "Cantidad de Registros: " + Listac.size()
                        + " \n AVAILIST HEAD: NULL  " + "\n";
                String pal22=writeMD();
                String pal3 = pal22+pal;

                ap.setName(nameArchivo);
                System.out.println("NAME" + ap.getName());
                ap.escribirArchivo(pal3);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "GUARDADO");
        } else {
            JOptionPane.showMessageDialog(this, "Debe haber creado al menos un registro para ingresar a esta opcion");
        }
    }//GEN-LAST:event_B_GuardarRegistroActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:}
        if (boolGuardado) {
            int cont1 = 1;
            System.out.println("hola");
            String[] names = {"Sofia", "Camila", "Valentina",
                "Isabella", "Valeria", "Daniela", "Mariana", "Sara", "Victoria", "Gabriela",
                "Ximena", "Andrea", "Natalia", "Martina", "Andrea", "Camila", "Natalia",
                "Mia", "Martina", "Lucia", "Samantha", "Maria", "Nicole", "Alejandra",
                "Paula", "Emily", "Fernanda", "Regina", "Santiago", "Sebastian", "Diego", "Nicolas",
                "Samuel", "Alejandro", "Daniel", "Mateo", "Angel", "Matias", "Gabriel",
                "Tomas", "David", "Emiliano", "Andres", "Joaquin", "Carlos", "Alexander", "Adrian",
                "Lucas", "Benjamin", "Leonardo", "Rodrigo", "Felipe", "Francisco", "Pablo", "Martin", "Fernando", "Isaac",
                "Manuel", "Juan Pablo", "Emmanuel", "Emilio", "Vicente", "Eduardo", "Juan", "Javier", "Luis", "Lucas", "Mateo", "Walter", "Tyler", "Obdulio"};
            //person name , person age,city ID and person ID

            Campos c1 = new Campos("PersonName", "String", 12, false);
            Campos c2 = new Campos("PersonAge", "String", 12, false);
            Campos c3 = new Campos("CityId", "int", 8, false);
            Campos c4 = new Campos("personId", "int", 8, false);

            ArrayList<Integer> PersonalIDval = new ArrayList();
            ArrayList<Integer> CityIDval = new ArrayList();
            PersonalIDval.add(0);
            CityIDval.add(0);
            ArrayList<Campos> lc = new ArrayList();
            ArrayList<String> ls = new ArrayList();
            Registros re1 = new Registros();
            lc.add(c1);
            lc.add(c2);
            lc.add(c3);
            lc.add(c4);
            String s1;
            String s2;
            String s3;
            String s4;
            re1.setListaCampo(lc);

            for (int i = 0; i < 10000; i++) {
                Random r1 = new Random();
                Random r2 = new Random();
                Random r3 = new Random();
                Random r4 = new Random();

                int x1 = 0;
                x1 += r1.nextInt(48);//nombres
                int x2 = 0;
                x2 += r2.nextInt(80);//edad
                int x3 = -1;
                int x4 = 0;

                x3 = r3.nextInt(80000000);//person ID 
                if (!PersonalIDval.contains(x3)) {
                    PersonalIDval.add(x3);
                }

                x4 = r4.nextInt(90000000);//City ID
                //System.out.println("X1: "+x1);

                s1 = names[x1];//agarro nombres
                s4 = x4 + "";
                lc.add(c4);
                ls.add(s4);

                //agregado primer campo
                s2 = x2 + "";
                lc.add(c1);
                ls.add(s1);

                //agregando segundo campo
                s3 = x3 + "";
                lc.add(c2);
                ls.add(s2);

                //agregado tercer campo
                lc.add(c3);
                ls.add(s3);

                //agregado cuarto campo
            }

            re1.setListaString(ls);
            //System.out.println("SIZE S"+re1.getListaString().size());
            String pal = "";
            //System.out.println("SIZE: "+re1.getListaCampo().size());
            for (int i = 0; i < re1.getListaString().size(); i++) {
                //System.out.println("STRING: "+re1.getListaString().get(i));
            }

            for (int i = 0; i < re1.getListaString().size(); i++) {
                pal += re1.getListaString().get(i) + "|";
                if (cont1 == 4) {
                    pal += "\n";
                    cont1 = 0;
                }
                cont1++;
            }

            try {
                Archivo ap2 = new Archivo();
                ap2.crearArchivo("Prueba1", "");
                ap2.setName("Prueba1.txt");
                ap2.escribirArchivo("4");

                String size4 = "" + c4.getSize();
                String key4 = "" + c4.isIsKey();
                String cc4 = c4.getNombre() + ";" + c4.getData_type() + ";" + size4 + ";" + key4 + ";";
                //System.out.println("KEY"+cc1);
                //ap.escribirArchivo(cc1, "prueba2.txt");

                String size1 = "" + c1.getSize();
                String cc1 = c1.getNombre() + ";" + c1.getData_type() + ";" + size1 + ";" + c1.isIsKey() + ";";
                //ap.escribirArchivo(cc2, "prueba2.txt");
                String size2 = "" + c2.getSize();
                String cc2 = c2.getNombre() + ";" + c2.getData_type() + ";" + size2 + ";" + c2.isIsKey() + ";";
                //ap.escribirArchivo(cc3, "prueba2.txt");
                String size3 = "" + c3.getSize();
                String cc3 = c3.getNombre() + ";" + c3.getData_type() + ";" + size3 + ";" + c3.isIsKey() + ";" + "\n"
                        + "CANTIDAD DE REGISTROS: " + re1.getListaString().size() / 4;
                String fin = cc4 + "\n" + cc1 + "\n" + cc2 + "\n" + cc3;

                //ap.escribirArchivo(cc4, "prueba2.txt");
                //ap.escribirArchivo("CABEZA DE AVAILIST: NULL","prueba2.txt");
                String fin2 = "4" + "\n" + fin + "\n" + "CABEZA DE AVAILIST:NULL" + "\n" + "_" + "\n";
                String fin3 = fin2 + fin2.length() + "\n" + pal;
                ap2.escribirArchivo(fin3);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe guardar y cerrar el archivo actual antes de abrir uno de prueba");
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void B_GuardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_GuardarArchivoActionPerformed
        // TODO add your handling code here:
        ap.setName("NULL.txt");
        Registros r = new Registros();
        Listac.clear();
        ListaS.clear();
        r.getListaCampo().clear();
        r.getListaString().clear();
        JOptionPane.showMessageDialog(this, "GUARDADO Y CERRADO EXITOSAMENTE");
        boolGuardado = true;
    }//GEN-LAST:event_B_GuardarArchivoActionPerformed

    private void B_AbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_AbrirArchivoActionPerformed
        if (boolGuardado) {
            JFileChooser fileChooser = new JFileChooser("./");

            int seleccion = fileChooser.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                int cont = 0;
                try {

                    Scanner sc = null;
                    Scanner sc2 = null;
                    File archivo = fileChooser.getSelectedFile();
                    ap.setArchivo(archivo);
                    String file = "";

                    sc = new Scanner(ap.getArchivo());

                    file = sc.nextLine();
                    file = "";

                    //System.out.println(file);
                    while (cont < 4) {

                        file += sc.nextLine();
                        cont++;

                    }

                    sc2 = new Scanner(file);
                    System.out.println("Revisar: " + file);
                    sc2.useDelimiter(";");
                    //System.out.println(file);

                    Campos c1 = new Campos();
                    c1.setNombre(sc2.next());
                    c1.setData_type(sc2.next());
                    c1.setSize(sc2.nextInt());
                    c1.setIsKey(sc2.nextBoolean());

                    System.out.println(c1.getNombre() + " " + c1.getData_type() + " " + c1.getSize() + " " + c1.isIsKey());

                    Campos c2 = new Campos();
                    c2.setNombre(sc2.next());
                    c2.setData_type(sc2.next());
                    c2.setSize(sc2.nextInt());
                    c2.setIsKey(sc2.nextBoolean());

                    System.out.println(c2.getNombre() + " " + c2.getData_type() + " " + c2.getSize() + " " + c2.isIsKey());

                    Campos c3 = new Campos();
                    c3.setNombre(sc2.next());
                    c3.setData_type(sc2.next());
                    c3.setSize(sc2.nextInt());
                    c3.setIsKey(sc2.nextBoolean());

                    System.out.println(c3.getNombre() + " " + c3.getData_type() + " " + c3.getSize() + " " + c3.isIsKey());

                    Campos c4 = new Campos();
                    c4.setNombre(sc2.next());
                    c4.setData_type(sc2.next());
                    c4.setSize(sc2.nextInt());
                    c4.setIsKey(sc2.nextBoolean());

                    System.out.println(c4.getNombre() + " " + c4.getData_type() + " " + c4.getSize() + " " + c4.isIsKey());

                    Registros r = new Registros();
                    r.getListaCampo().add(c1);
                    r.getListaCampo().add(c2);
                    r.getListaCampo().add(c3);
                    r.getListaCampo().add(c4);
                    ArrayList<String> lista_string = new ArrayList();
                    System.out.println("fuera");
                    try {
                        System.out.println("adentro");
                        RandomAccessFile file_a = new RandomAccessFile("prueba1.txt", "rw");
                        file_a.seek(158);
                        String seek = file_a.readLine();
                        System.out.println("Soy el seek: " + seek);
                        //file_a.writeUTF("soy seek"+"\n");
                        JOptionPane.showMessageDialog(null, "Funcion√≥");
                    } catch (Exception e) {
                        System.out.println(e);

                    }
                    System.out.println("salgo");

                } catch (Exception e) {
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe guardar y cerrar el archivo actual antes de abrir uno nuevo");
        }
    }//GEN-LAST:event_B_AbrirArchivoActionPerformed

    private void Cb_editarCampoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Cb_editarCampoItemStateChanged
        Campos c = new Campos();
        c = (Campos) Cb_editarCampo.getSelectedItem();
        Nombre_Campo1.setText(c.getNombre());
        jSpinner2.setValue(c.getSize());


    }//GEN-LAST:event_Cb_editarCampoItemStateChanged

    private void B_AbrirRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_AbrirRegistroActionPerformed
        // TODO add your handling code here:
        if (boolRegistro && boolGuardarRegistro) {
            //ya hay registros creados
        } else if (boolRegistro == false) {
            JOptionPane.showMessageDialog(this, "Debe haber creado al menos un registro para ingresar a esta opcion");
        } else if (boolGuardarRegistro == false) {
            JOptionPane.showMessageDialog(this, "Debe guardar el registro antes de abrirlo");
        }

    }//GEN-LAST:event_B_AbrirRegistroActionPerformed

    private void B_CerrarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CerrarRegistroActionPerformed
        // TODO add your handling code here:
        if (boolRegistro) {
            //ya hay registros creados
        } else {
            JOptionPane.showMessageDialog(this, "Debe haber creado al menos un registro para ingresar a esta opcion");
        }
    }//GEN-LAST:event_B_CerrarRegistroActionPerformed

    private void cb_TDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_TDItemStateChanged
        if (cb_TD.getSelectedItem().equals("Int") || cb_TD.getSelectedItem().equals("Char")) {
            jLabel_CrearCampo3.setVisible(false);
            longS.setVisible(false);
        } else {
            jLabel_CrearCampo3.setVisible(true);
            longS.setVisible(true);
        }
    }//GEN-LAST:event_cb_TDItemStateChanged

    private void GuardarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCamposActionPerformed
        String cc1 = "";

        for (int i = 0; i < Listac.size(); i++) {
            Campos c1 = Listac.get(i);
            String size1 = c1.getSize() + "";
            cc1 += c1.getNombre() + ";" + c1.getData_type() + ";" + size1 + ";" + c1.isIsKey() + ";" + "\n";

        }
        //"CAMPOS: 4 "+"\n"+
        //+"\n"+"AVAILIST HEAD: NULL "+"\n";
        int diff=10-Listac.size();
        String pal2 = "";
        String esp="";
        for (int i = 0; i < diff; i++) {
            esp+="\n";
        }
        
        pal2 += Listac.size() + "\n" + cc1 +esp+ "Cantidad de Registros: " + Listac.size()
                + " \n AVAILIST HEAD: NULL  " + "\n"+ "\n"+ "\n"+ "\n"+ "\n"+ "\n"+ "\n"+ "_"+"\n";
        ap.setName(nameArchivo);
        try {
            ap.escribirArchivo(pal2);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarCamposActionPerformed
    public String writeMD(){
        String cc1 = "";

        for (int i = 0; i < Listac.size(); i++) {
            Campos c1 = Listac.get(i);
            String size1 = c1.getSize() + "";
            cc1 += c1.getNombre() + ";" + c1.getData_type() + ";" + size1 + ";" + c1.isIsKey() + ";" + "\n";

        }
        //"CAMPOS: 4 "+"\n"+
        //+"\n"+"AVAILIST HEAD: NULL "+"\n";
        int diff=10-Listac.size();
        String pal2 = "";
        String esp="";
        for (int i = 0; i < diff; i++) {
            esp+="\n";
        }
        
        pal2 += Listac.size() + "\n" + cc1 +esp+ "Cantidad de Registros: " + Listac.size()
                + " \n AVAILIST HEAD: NULL  " + "\n"+ "\n"+ "\n"+ "\n"+ "\n"+ "\n"+ "\n"+ "_"+"\n";
        return pal2;
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //inserto NUMEROS 1,2,3,15,6,70,28,8
        Arbolb tree = new Arbolb(6);
        LLave l1 = new LLave(12121, 1);
        LLave l2 = new LLave(12122, 22);
        LLave l3 = new LLave(12123, 3);
        LLave l4 = new LLave(12124, 4);
        LLave l5 = new LLave(12125, 7);
        LLave l6 = new LLave(12126, 70);
        LLave l7 = new LLave(12127, 222);
        LLave l8 = new LLave(12128, 888);
        //LLave l9=new LLave(12125,37);
        LLave l10 = new LLave(12126, 270);
        LLave l11 = new LLave(12127, 248);
        LLave l12 = new LLave(12128, 6225454);
        LLave l13 = new LLave(12128, 724542);
        LLave l14 = new LLave(12128, 2);
        LLave l15 = new LLave(12128, 122222);

        tree.insert(l4);
        tree.insert(l5);
        tree.insert(l6);
        tree.insert(l7);
        tree.insert(l8);
        tree.insert(l1);
        tree.insert(l2);
        tree.insert(l3);
        //tree.insert(l9);
        tree.insert(l10);
        tree.insert(l11);
        tree.insert(l12);
        tree.insert(l13);
        tree.insert(l14);
        tree.insert(l15);
        // tree.print(tree.raiz);
        tree.Show();
        //search llave 28
        // LLave mia=tree.buscarLlave(tree.raiz, 37);
        System.out.println("");
        //System.out.println("LLAVE ENCONTRADA:  "+mia.getLlave());


    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                f.setExtendedState(MAXIMIZED_BOTH);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_AbrirArchivo;
    private javax.swing.JButton B_AbrirRegistro;
    private javax.swing.JButton B_BorrarCampo;
    private javax.swing.JButton B_Campo;
    private javax.swing.JButton B_CerrarRegistro;
    private javax.swing.JButton B_CrearCampo;
    private javax.swing.JButton B_Eliminar;
    private javax.swing.JButton B_Exportar;
    private javax.swing.JButton B_GuardarArchivo;
    private javax.swing.JButton B_GuardarRegistro;
    private javax.swing.JButton B_Index;
    private javax.swing.JButton B_ListarCampo;
    private javax.swing.JButton B_ModificarCampo;
    private javax.swing.JButton B_NuevoArchivo;
    private javax.swing.JButton B_NuevoRegistro1;
    private javax.swing.JButton B_Registro;
    private javax.swing.JComboBox<String> Cb_editarCampo;
    private javax.swing.JButton GuardarCampos;
    private javax.swing.JRadioButton No1;
    private javax.swing.JTextField Nombre_Campo;
    private javax.swing.JTextField Nombre_Campo1;
    private javax.swing.JRadioButton RB1;
    private javax.swing.JRadioButton RB2;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel Titulo1;
    private javax.swing.JLabel background;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_TD;
    private javax.swing.JComboBox<String> cb_TD1;
    private javax.swing.JComboBox<String> cb_borrarc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JDialog jDialog_Archivo;
    private javax.swing.JDialog jDialog_BorrarCampo;
    private javax.swing.JDialog jDialog_Campos;
    private javax.swing.JDialog jDialog_CrearCampos;
    private javax.swing.JDialog jDialog_CrearRegistro;
    private javax.swing.JDialog jDialog_EditarCampos;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_CrearCampo;
    private javax.swing.JLabel jLabel_CrearCampo1;
    private javax.swing.JLabel jLabel_CrearCampo10;
    private javax.swing.JLabel jLabel_CrearCampo2;
    private javax.swing.JLabel jLabel_CrearCampo3;
    private javax.swing.JLabel jLabel_CrearCampo4;
    private javax.swing.JLabel jLabel_CrearCampo5;
    private javax.swing.JLabel jLabel_CrearCampo6;
    private javax.swing.JLabel jLabel_CrearCampo7;
    private javax.swing.JLabel jLabel_CrearCampo8;
    private javax.swing.JLabel jLabel_CrearCampo9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner longS;
    // End of variables declaration//GEN-END:variables
    ArrayList<Integer>ListaL=new ArrayList();
    ArrayList<Campos> Listac = new ArrayList();
    ArrayList<String> ListaS = new ArrayList();
    ArrayList<Integer> ListaKeyPos = new ArrayList();//posici√≥n de las llaves.
    Archivo ap = new Archivo();
    String nameArchivo;

    public void eliminarTabla() {
        //---------------------------------------------------//
        //      Esto hace que no se repitan cosas en la tabla
        //---------------------------------------------------//
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        int a = jTable1.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }

    }
    //variables globales
    

    //booleans de validaciones
    boolean boolArchivo = false;
    boolean boolCampos = false;
    boolean boolRegistro = false;
    boolean boolGuardado = false;
    boolean boolGuardarRegistro = false;
    boolean boolEntroRegistro = true;

}
